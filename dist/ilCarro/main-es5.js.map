{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cars/car-details/car-details.component.ts","webpack:///src/app/cars/car-details/car-details.component.html","webpack:///src/app/cars/cars-http.service.ts","webpack:///src/app/cars/cars.module.ts","webpack:///src/app/cars/dates-range-validator.ts","webpack:///src/app/cars/filters/filters.component.html","webpack:///src/app/cars/filters/filters.component.ts","webpack:///src/app/cars/footer/footer.component.ts","webpack:///src/app/cars/footer/footer.component.html","webpack:///src/app/cars/fuel.ts","webpack:///src/app/cars/gear-types.ts","webpack:///src/app/cars/imgur-photo.service.ts","webpack:///src/app/cars/let-car-work/let-car-work.component.html","webpack:///src/app/cars/let-car-work/let-car-work.component.ts","webpack:///src/app/cars/map/map.component.ts","webpack:///src/app/cars/map/map.component.html","webpack:///src/app/cars/search-navigator/search-navigator.component.ts","webpack:///src/app/cars/search-navigator/search-navigator.component.html","webpack:///src/app/cars/search-results/search-results.component.ts","webpack:///src/app/cars/search-results/search-results.component.html","webpack:///src/app/cars/search/search.component.ts","webpack:///src/app/cars/search/search.component.html","webpack:///src/app/cars/special-offers/special-offers.component.ts","webpack:///src/app/cars/special-offers/special-offers.component.html","webpack:///src/app/cars/sub-search/sub-search.component.html","webpack:///src/app/cars/sub-search/sub-search.component.ts","webpack:///src/app/cars/wheels-drive.ts","webpack:///src/app/errors.ts","webpack:///src/app/local-store.service.ts","webpack:///src/app/service/car-card/car-card.component.ts","webpack:///src/app/service/car-card/car-card.component.html","webpack:///src/app/service/car-details/car-details.component.ts","webpack:///src/app/service/car-details/car-details.component.html","webpack:///src/app/service/car-input.directive.ts","webpack:///src/app/service/car-price-label/car-price-label.component.ts","webpack:///src/app/service/car-price-label/car-price-label.component.html","webpack:///src/app/service/dialog/dialog-builder.ts","webpack:///src/app/service/dialog/dialog.component.ts","webpack:///src/app/service/dialog/dialog.component.html","webpack:///src/app/service/image-slider/image-slider.component.ts","webpack:///src/app/service/image-slider/image-slider.component.html","webpack:///src/app/service/login-registration-modal/login-registration-modal.component.ts","webpack:///src/app/service/login-registration-modal/login-registration-modal.component.html","webpack:///src/app/service/login/login.component.ts","webpack:///src/app/service/login/login.component.html","webpack:///src/app/service/registration/registration.component.ts","webpack:///src/app/service/registration/registration.component.html","webpack:///src/app/service/reserve-modal/reserve-modal.component.ts","webpack:///src/app/service/reserve-modal/reserve-modal.component.html","webpack:///src/app/service/service.module.ts","webpack:///src/app/service/static-location.service.ts","webpack:///src/app/shared/login-registration/login-registration.component.ts","webpack:///src/app/shared/login-registration/login-registration.component.html","webpack:///src/app/shared/logout/logout.component.ts","webpack:///src/app/shared/navigator/navigator.component.ts","webpack:///src/app/shared/navigator/navigator.component.html","webpack:///src/app/shared/privacy-police/privacy-police.component.ts","webpack:///src/app/shared/privacy-police/privacy-police.component.html","webpack:///src/app/shared/shared-http.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/terms-of-use/terms-of-use.component.ts","webpack:///src/app/shared/terms-of-use/terms-of-use.component.html","webpack:///src/app/tools.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","CarDetailsComponent","route","httpService","dialog","datePipe","router","decimalPipe","formBuilder","localStore","location","staticLocationService","minStartDate","Date","maxDate","getTime","reserveForm","url","params","subscribe","serialNumber","initForm","queryParams","param","startDate","endDate","get","setValue","begin","end","loadCar","control","controls","errors","getToken","car","dateStart","dates","value","dateEnd","show","open","datesControl","required","group","getCar","carLoaded","showError","bind","error","message","negativeBtn","positiveBtn","back","navigate","setTitle","initFilter","setCarMarker","setLocation","validator","setValidators","createBookedPeriodValidator","make","model","year","filter","d","valid","booked_periods","forEach","bookedPeriod","start_date_time","end_date_time","staticPlace","getPlaces","address","formatted_address","split","formattedAddress","startBook","endBook","bookPeriod","showDialog","URL","CarsHttpService","http","pipe","request","ascending","fuel","gear","currentPage","itemsOnPage","latitude","longitude","radius","city","minAmount","maxAmount","wheelsDrive","searchCarsByFilters","toPromise","items_total","cars","length","min","max","carPrices","map","price_per_day","Math","results","result","carNumber","reservation","token","post","headers","Authorization","authHeader","getAuthHeader","splice","providedIn","CarsModule","DatesRangeValidator","minRange","FiltersComponent","fuelTypes","getFuels","wheelsDriveTypes","getWheelsDrives","gearTypes","getGears","routeParams","initFiltersForm","getFilters","filters","sort","a","b","localeCompare","models","Object","assign","updateForm","filtersForm","searchParams","makeControl","modelControl","fuelControl","yearControl","getFullYear","gearControl","wheelsDriveControl","valueChanges","enable","disable","find","search","FooterComponent","cd","height","detectChanges","FuelType","name","DIESEL","PETROL","HYBRID","ELECTRIC","GAS","GearTypes","AT","MT","SMT","ImgurPhotoService","file","formData","FormData","append","reportProgress","event","getEventMessage","handleErrors","status","type","Sent","uploaded","percentage","UploadProgress","round","loaded","total","Response","data","body","LetCarWorkComponent","photoService","photoUrls","features","fileNames","photosUrlsMap","Map","photosProgressMap","photoNamesMap","loading","places","mapFormResultToCar","futures","pickUpPlace","fuelConsumption","carClass","distance","price","distance_included","serial_number","fuel_consumption","wheels_drive","car_class","image_url","Array","from","values","pick_up_place","place","carDetailForm","addressInput","nativeElement","photos","addPickupPlaceValidator","files","i","photo","item","set","uploadPhoto","link","urls","includes","setErrors","notLoaded","updateValueAndValidity","addCar","response","carAdded","controlName","touched","invalid","neutralBtn","decodeURI","reset","addressText","engineControl","serialNumberControl","maxLength","doorsControl","seatsControl","fuelConsumptionControl","carClassControl","pricePerDayControl","aboutControl","distanceIncludeControl","pickUpPlaceControl","updateOn","imagesControl","engine","doors","seats","about","addressError","selectedPlace","place_id","uploadFiles","MapComponent","showLoading","loadCars","getAllCars","onCarsLoaded","onError","SearchNavigatorComponent","currentTab","transform","animations","SearchResultsComponent","sortByPriceFromLowToHigh","page","pageSize","minPrice","maxPrice","undefined","pageIndex","onSearchSuccess","onSearchError","searchResults","car1","car2","SearchComponent","cities","initSearchForm","getCities","addCityValidator","searchForm","cityInput","cityValue","cityControl","selectedCity","short_name","SpecialOffersComponent","getBestCars","comments","getLatestComments","SubSearchComponent","mapFormToRouteParams","priceRange","resCity","c","mapDate","setSearchFormValues","minMaxPromise","getMaxAndMinPrices","minMaxValues","newOptions","options","floor","ceil","date","sortByControl","priceSliderControl","parseInt","WheelsDriveTypes","RWD","AWD","FWD","ConnectionError","AuthorizationError","AuthenticationError","ConflictError","BadRequestError","NotFoundError","TOKEN","NAME","LAST_NAME","EMAIL","PHONE","LocalStoreService","localStorage","setItem","getItem","removeItem","firstName","lastName","email","phoneNumber","CarCardComponent","CarInputDirective","el1","label","classList","add","remove","CarPriceLabelComponent","DialogBuilder","listener","negativeBtnListener","neutralBtnListener","positiveBtnListener","dialogRef","afterClosed","negative","neutral","positive","DialogComponent","dialogData","ImageSliderComponent","slideTimeout","containerHeight","_currentPhoto","sliderContainer","offsetWidth","setSlideInterval","currentPhoto","clearTimeout","timeout","clearInterval","interval","setTimeout","setInterval","n","sliderLength","plusClick","minusClick","LoginRegistrationModalComponent","loginFlag","LoginComponent","sharedService","loggedInEventEmitter","registrationEmitter","loadingEmitter","loginData","emit","login","password","usr","loginForm","RegistrationComponent","registeredEventEmitter","loginEmitter","regData","user","first_name","second_name","registration","register","registrationForm","pattern","minLength","termsOfUse","requiredTrue","ReserveModalComponent","reserveData","person","reservationDetails","person_who_booked","savePhoneNumber","phone","reserveCar","order","showSuccess","abs","firstNameControl","getNameOfUser","lastNameControl","getLastNameOfUser","emailControl","getEmailOfUser","phoneControl","getPhoneOfUser","getName","getLastName","getEmail","getPhoneNumber","close","order_number","amount","window","reload","ReserveDialogBuilder","ServiceModule","StaticLocationService","LoginRegistrationComponent","_loginFlag","urlNavigate","pairs","pair","parseParams","LogoutComponent","deleteToken","deleteEmail","deletePhoneNumber","deleteLastName","deleteName","NavigatorComponent","navLinks","path","loginLinks","logoutLinks","opened","decodeURIComponent","setClosed","deleteAccount","accountDeleted","deleteError","setOpened","PrivacyPoliceComponent","SharedHttpService","btoa","auth","saveEmail","saveToken","saveName","saveLastName","routes","component","redirectTo","pathMatch","SharedModule","forRoot","onSameUrlNavigation","preloadingStrategy","TermsOfUseComponent","compareCars","lowToHigh","res","compareDates","date1","date2","saveTimestamp","checkTimestamp","savedName","currentTime","saveTime","saveFormData","formGroup","getRawValue","jsonData","JSON","stringify","restoreFormData","clearFromData","parse","saveAutocomplete","restoreAutocomplete","clearSavedAutocomplete","saveFiles","forSave","key","push","restoreFiles","clearFilesForSave","savedData","saveCityValue","restoreCityValue","clearCityValue","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ilCarro';\n}\n","<app-navigator></app-navigator>\n","import {BrowserModule, HammerModule} from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\nimport { CarsModule } from './cars/cars.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HammerModule,\n    SharedModule,\n    CarsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Car, CarsHttpService,} from '../cars-http.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, ValidatorFn, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DatePipe, DecimalPipe, Location} from '@angular/common';\nimport {Title} from '@angular/platform-browser';\nimport {SatDatepickerRangeValue} from 'saturn-datepicker';\nimport {LocalStoreService} from '../../local-store.service';\nimport {DatesRangeValidator} from '../dates-range-validator';\nimport {ConnectionError, NotFoundError} from '../../errors';\nimport {DialogBuilder} from '../../service/dialog/dialog-builder';\nimport {compareDates, restoreFormData, saveFormData} from '../../tools';\nimport {ReserveDialogBuilder} from '../../service/reserve-modal/reserve-modal.component';\nimport {LoginRegistrationModalComponent} from '../../service/login-registration-modal/login-registration-modal.component';\nimport {StaticLocationService} from '../../service/static-location.service';\n\n@Component({\n  selector: 'app-car-details',\n  templateUrl: './car-details.component.html',\n  styleUrls: ['./car-details.component.scss'],\n})\nexport class CarDetailsComponent implements OnInit, OnDestroy {\n\n  car: Car;\n  private serialNumber: string;\n  minStartDate = new Date();\n  address: string[];\n  filter;\n  formattedAddress: string;\n  reserveForm: FormGroup;\n  maxDate: Date = new Date(this.minStartDate.getTime() + 31536000000);\n  private url: string;\n\n\n  constructor(private route: ActivatedRoute, private httpService: CarsHttpService, private dialog: MatDialog,\n              private datePipe: DatePipe, private router: Router, private decimalPipe: DecimalPipe, private title: Title,\n              private formBuilder: FormBuilder, public localStore: LocalStoreService, private location: Location,\n              private staticLocationService: StaticLocationService) {\n\n  }\n\n  ngOnDestroy(): void {\n    saveFormData(this.reserveForm, this.url);\n  }\n\n  ngOnInit() {\n    this.url = this.router.url;\n    this.route.params.subscribe(params => this.serialNumber = params.id);\n    this.initForm();\n    this.route.queryParams.subscribe(param => {\n      if (param.startDate && param.endDate) {\n        this.reserveForm.get('dates').setValue({\n          begin: new Date(param.startDate),\n          end: new Date(param.endDate)\n        });\n      } else {\n        restoreFormData(this.reserveForm, this.url);\n      }\n    });\n\n    this.loadCar();\n  }\n\n  getErrors(control: string) {\n    return this.reserveForm.controls[control].errors;\n  }\n\n  showDialog() {\n    if (this.localStore.getToken()) {\n      new ReserveDialogBuilder(this.dialog)\n        .car(this.car)\n        .dateStart(this.reserveForm.controls.dates.value.begin)\n        .dateEnd(this.reserveForm.controls.dates.value.end)\n        .show();\n    } else {\n      this.dialog.open(LoginRegistrationModalComponent);\n    }\n  }\n\n  private initForm() {\n    const datesControl = new FormControl(null,\n      [Validators.required]);\n    this.reserveForm = this.formBuilder.group({\n      dates: datesControl\n    });\n  }\n\n  private loadCar() {\n    this.httpService.getCar(this.serialNumber)\n      .subscribe(car => this.carLoaded(car),\n        this.showError.bind(this));\n  }\n\n  private showError(error) {\n    if (error instanceof ConnectionError) {\n      new DialogBuilder(this.dialog)\n        .title('Connection error')\n        .message('Check your connection and try again')\n        .negativeBtn('Close')\n        .positiveBtn('Try again', this.loadCar.bind(this))\n        .show();\n    } else if (error instanceof NotFoundError) {\n      new DialogBuilder(this.dialog)\n        .title('Car not found')\n        .message('Car not found')\n        .positiveBtn('Go to previous page', this.location.back)\n        .positiveBtn('Search', () => this.router.navigate(['/search']))\n        .show();\n    } else {\n      new DialogBuilder(this.dialog)\n        .title('Something goes wrong')\n        .positiveBtn('Try again', this.loadCar.bind(this))\n        .negativeBtn('Close')\n        .show();\n    }\n  }\n\n  private carLoaded(car: Car) {\n    this.car = car;\n    this.setTitle(car);\n    this.initFilter(car);\n    this.setCarMarker(car);\n    this.setLocation(car);\n    const validator = this.reserveForm.controls.dates.validator;\n    this.reserveForm.controls.dates.setValidators([validator, this.createBookedPeriodValidator(this.car)]);\n  }\n\n  private setTitle(car: Car) {\n    this.title.setTitle(`${car.make} ${car.model} ${car.year}`);\n  }\n\n  private initFilter(car: Car) {\n    this.filter = (d: Date): boolean => {\n      let valid = true;\n      car.booked_periods.forEach(bookedPeriod => {\n        const dateStart = new Date(bookedPeriod.start_date_time);\n        const dateEnd = new Date(bookedPeriod.end_date_time);\n        if (dateStart.getTime() <= d.getTime() && d.getTime() <= dateEnd.getTime()) {\n          valid = false;\n        }\n      });\n      return valid;\n    };\n  }\n\n  private setCarMarker(car: Car) {\n    // Car marker functionality replaced with static data\n    // Car location: lat ${car.pick_up_place.latitude}, lng ${car.pick_up_place.longitude}\n  }\n\n  private setLocation(car: Car) {\n    // Use static location data instead of PlacesService\n    const staticPlace = this.staticLocationService.getPlaces()[0];\n    this.address = staticPlace.formatted_address.split(',');\n    this.formattedAddress = staticPlace.formatted_address;\n  }\n\n\n  private createBookedPeriodValidator(car: Car): ValidatorFn {\n    return (control: FormControl) => {\n      const dates: SatDatepickerRangeValue<Date> = control.value;\n      if (car) {\n        for (const bookedPeriod of this.car.booked_periods) {\n          const startBook = new Date(bookedPeriod.start_date_time);\n          const endBook = new Date(bookedPeriod.end_date_time);\n          if (\n            // endBook >= begin >= startBook\n            compareDates(dates?.begin, startBook) && compareDates(endBook, dates?.begin)\n            // endBook >= end >= startBook\n            || compareDates(dates?.end, startBook) && compareDates(endBook, dates?.end)\n            // end >= startBook >= begin\n            || compareDates(startBook, dates?.begin) && compareDates(dates?.end, startBook)\n            // end >= endBook >= begin\n            || compareDates(endBook, dates?.begin) && compareDates(dates?.end, endBook))\n            return {\n              bookPeriod: 'Book period cant contain already booked dates'\n            };\n        }\n      }\n      return null;\n    };\n  }\n}\n","<div class=\"car-details-container\">\n  <div class=\"car-gallery\">\n    <image-slider [photos]=\"car.image_url\"></image-slider>\n    <car-details *ngIf=\"car\" [car]=\"car\" class=\"car-title\"></car-details>\n  </div>\n  <div class=\"dates-select\">\n    <h1 class=\"title\">Still available in your area</h1>\n    <form [formGroup]=\"reserveForm\">\n      <div class=\"input-container\">\n        <label #datesLabel class=\"input-label\" for=\"dates\">Dates <span class=\"required-marker\">*</span></label>\n        <input (click)=\"datePicker.open()\" [carInput]=\"datesLabel\" [matDatepickerFilter]=\"filter\"\n               [max]=\"maxDate\" [min]=\"minStartDate\" [satDatepicker]=\"datePicker\" formControlName=\"dates\"\n               id=\"dates\">\n        <sat-datepicker #datePicker [rangeMode]=\"true\"></sat-datepicker>\n        <div *ngIf=\"getErrors('dates')\" class=\"error\">\n          <div *ngIf=\"getErrors('dates')?.error\">\n            {{getErrors('dates')?.error}}\n          </div>\n          <div *ngIf=\"getErrors('dates')?.required  && !getErrors('dates')?.matDatepickerParse\">\n            Dates are required\n          </div>\n          <div *ngIf=\"getErrors('dates')?.matDatepickerMin\">\n            You can't pick date before today\n          </div>\n          <div *ngIf=\"getErrors('dates')?.matDatepickerRange\">\n            Second date must be after first date\n          </div>\n          <div *ngIf=\"getErrors('dates')?.matDatepickerParse\">\n            Date doesn't exists\n          </div>\n          <div *ngIf=\"getErrors('dates')?.matDatepickerFilter || getErrors('dates')?.bookPeriod\">\n            Picked period can't contain already picked dates\n          </div>\n          <div *ngIf=\"getErrors('dates')?.minRange\">\n            You can't book car for less than a day\n          </div>\n          <div *ngIf=\"getErrors('dates')?.matDatepickerMax\">\n            You can't pick date after one year\n          </div>\n        </div>\n      </div>\n      <button (click)=\"showDialog()\"\n              [disabled]=\"reserveForm.invalid\">Rent now!!\n      </button>\n    </form>\n  </div>\n  <div class=\"car-details\">\n    <ng-container *ngIf=\"car\">\n      <div class=\"details-container\">\n        <div class=\"column one-line\">\n          <span>Engine</span><span>{{car.engine}}</span>\n          <span>Fuel</span><span>{{car.fuel}}</span>\n          <span>Gear</span><span>{{car.gear}}</span>\n          <span>WD</span><span>{{car.wheels_drive}}</span>\n        </div>\n        <div class=\"column\">\n          <span>Fuel cons</span><span>{{car.fuel_consumption}} L/100km</span>\n          <span>Doors</span><span>{{car.doors}}</span>\n          <span>Seats</span><span>{{car.seats}}</span>\n          <span>Class</span><span>{{car.car_class}}</span>\n        </div>\n        <div class=\"column address-column\">\n          <span>Address</span>\n          <span>{{formattedAddress}}</span>\n          <span>Distance included</span>\n          <span>{{car.distance_included}} km</span>\n        </div>\n        <div class=\"column about-container\">\n          <span>About</span><span>{{car.about}}</span>\n        </div>\n        <div class=\"column\">\n          <span>Features:</span>\n          <ul>\n            <li *ngFor=\"let feature of car.features\">\n              - {{feature}}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n  <div #gMap class=\"google-map\"></div>\n</div>\n<app-footer></app-footer>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, flatMap, map} from 'rxjs/operators';\nimport {User} from '../shared/shared-http.service';\nimport {Observable} from 'rxjs';\nimport {DatePipe} from '@angular/common';\nimport {LocalStoreService} from '../local-store.service';\nimport {handleErrors} from '../errors';\n\n/**\n * Results of search provides with this interface\n */\nexport interface SearchResults {\n  current_page: number;\n  items_on_page: number;\n  items_total: number;\n  cars: Car [];\n}\n\nexport interface BookedPeriod {\n  start_date_time: string;\n  end_date_time: string;\n}\n\n/**\n * Result of search car provides with this inteface\n * Also used as field in SearchResults\n */\nexport interface Car {\n  serial_number: string;\n  make: string;\n  model: string;\n  year: string;\n  engine: string;\n  fuel: string;\n  gear: string;\n  wheels_drive: string;\n  doors: number;\n  seats: number;\n  fuel_consumption: number;\n  features: string[];\n  car_class: string;\n  price_per_day: number;\n  distance_included: number;\n  about: string;\n  pick_up_place: Place;\n  image_url: string[];\n  owner?: User;\n  booked_periods?: BookedPeriod[];\n}\n\n/**\n * Place of car. Used in Car\n */\nexport interface Place {\n  place_id: string;\n  latitude: number;\n  longitude: number;\n}\n\n/**\n * Interfaces for receiving filter information from server\n */\nexport interface Filter {\n  make: string;\n  models: Model[];\n}\n\nexport interface Model {\n  model: string;\n  years: Year[];\n}\n\nexport interface Year {\n  year: string;\n  engines: Engine[];\n}\n\nexport interface Engine {\n  engine: string;\n  fuels: Fuel[];\n}\n\nexport interface Fuel {\n  fuel: string;\n  gears: Gear[];\n}\n\nexport interface Gear {\n  gear: string;\n  wheels_drives: WheelsDrive[];\n}\n\nexport interface WheelsDrive {\n  wheels_drive: string;\n}\n\n/**\n * Request to search cars. All fields are optional. Use only those that you need\n */\nexport interface SearchCarRequest {\n  city?: string;\n  startDate?: string;\n  endDate?: string;\n  make?: string;\n  model?: string;\n  year?: string;\n  engine?: string;\n  fuel?: string;\n  gear?: string;\n  wheelsDrive?: string;\n  minAmount?: number;\n  maxAmount?: number;\n  ascending?: boolean;\n  itemsOnPage?: number;\n  currentPage?: number;\n  latitude?: number;\n  longitude?: number;\n  radius?: number;\n}\n\n/**\n * Body for result of min/max prices for cars by filter\n */\nexport interface MaxMinResult {\n  max: number;\n  min: number;\n}\n\n/**\n * Interfaces for reservation of a car\n */\nexport interface ReservationDetails {\n  start_date_time: string;\n  end_date_time: string;\n  person_who_booked: BookPerson;\n}\n\nexport interface BookPerson {\n  email: string;\n  first_name: string;\n  second_name: string;\n  phone: string;\n}\n\nexport interface ReservationResponse {\n  order_number: string;\n  amount: number;\n  booking_date: string;\n}\n\nexport interface Comment {\n  first_name: string;\n  second_name: string;\n  post_date: string;\n  post: string;\n}\n\nexport const URL = 'https://rent-cars-app.herokuapp.com';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarsHttpService {\n\n  constructor(private http: HttpClient, private datePipe: DatePipe, private localStore: LocalStoreService) {\n  }\n\n  /**\n   * Get all filters from server\n   */\n  getFilters(): Observable<Filter[]> {\n    return this.http.get<Filter[]>(URL + '/filters').pipe(catchError(handleErrors).bind(this));\n  }\n\n  /**\n   * Search cars by all filters that sre sated up in params\n   * @param request - SearchCarRequest, fields that are not sated up, or sated up as undefined dont use in server request\n   */\n  searchCarsByFilters(request: SearchCarRequest): Observable<SearchResults> {\n    let params = `?`;\n    // to much code for setting url params\n    // TODO Optimize later\n    if (request.startDate) {\n      params += `&start_date=${request.startDate}`;\n    }\n    if (request.endDate) {\n      params += `&end_date=${request.endDate}`;\n    }\n    if (request.ascending) {\n      params += `&ascending=${request.ascending}`;\n    }\n    if (request.fuel) {\n      params += `&fuel=${request.fuel}`;\n    }\n    if (request.gear) {\n      params += `&gear=${request.gear}`;\n    }\n    if (request.currentPage) {\n      params += `&current_page=${request.currentPage}`;\n    }\n    if (request.itemsOnPage) {\n      params += `&items_on_page=${request.itemsOnPage}`;\n    }\n    if (request.latitude) {\n      params += `&latitude=${request.latitude}&longitude=${request.longitude}&radius=${request.radius}`;\n    } else {\n      if (request.city) {\n        params += `&city=${request.city}`;\n      }\n    }\n    if (request.make) {\n      params += `&make=${request.make}`;\n    }\n    if (request.model) {\n      params += `&model=${request.model}`;\n    }\n    if (request.minAmount) {\n      params += `&min_amount=${request.minAmount - 1}`;\n    }\n    if (request.maxAmount) {\n      params += `&max_amount=${request.maxAmount - -1}`;\n    }\n    if (request.wheelsDrive) {\n      params += `&wheels_drive=${request.wheelsDrive}`;\n    }\n    if (request.year) {\n      params += `&year=${request.year}`;\n    }\n    return this.http.get<SearchResults>(URL + '/search/all' + params).pipe(catchError(handleErrors));\n  }\n\n  /**\n   * Get max and min price for cars with users filters\n   * @param request - filtrs\n   */\n  async getMaxAndMinPrices(request: SearchCarRequest): Promise<MaxMinResult> {\n    let cars: Car[];\n    request.itemsOnPage = (await this.searchCarsByFilters(request).toPromise()).items_total;\n    cars = (await this.searchCarsByFilters(request).toPromise()).cars;\n    if (cars.length === 0) {\n      return {min: -1, max: -1};\n    }\n    const carPrices = cars.map(car => car.price_per_day);\n    const min = Math.min(...carPrices);\n    const max = Math.max(...carPrices);\n    return {min, max};\n  }\n\n  /**\n   * Get all cars from server by users filters without city filter\n   * @param params - user filters, city property replaces with undefined\n   */\n  getAllCars(params: SearchCarRequest): Observable<Car[]> {\n    return this.searchCarsByFilters(params)\n      .pipe(flatMap((results: SearchResults) => {\n        params.itemsOnPage = results.items_total;\n        params.currentPage = 0;\n        return this.searchCarsByFilters(params);\n      }))\n      .pipe(map(result => result.cars))\n      .pipe(catchError(handleErrors));\n  }\n\n  /**\n   * Get all car details by car serial number\n   * @param carNumber - serial number\n   */\n  getCar(carNumber: string): Observable<Car> {\n    return this.http.get<Car>(URL + '/car?serial_number=' + carNumber)\n      .pipe(catchError(handleErrors));\n  }\n\n  /**\n   * Reserve car on specific date and time\n   * @param carNumber - serial number of car for reservation\n   * @param reservation - dates for reservations, personal information of booker\n   */\n  reserveCar(carNumber: string, reservation: ReservationDetails): Observable<ReservationResponse> {\n    const token = this.localStore.getToken();\n    return this.http.post<ReservationResponse>(URL + '/car/reservation?serial_number=' + carNumber, reservation, {\n      headers: {\n        Authorization: token\n      }\n    })\n      .pipe(catchError(handleErrors));\n  }\n\n  /**\n   * Add new car to account.\n   * @param car - car details\n   * return observable car with details of uploaded car\n   */\n  addCar(car: Car): Observable<Car> {\n    const authHeader = this.getAuthHeader();\n    return this.http.post<Car>(`${URL}/car`, car, {\n      headers: authHeader\n    }).pipe(catchError(handleErrors));\n  }\n\n  /**\n   * Get 3 best booked cars\n   */\n  getBestCars(): Observable<Car[]> {\n    return this.http.get<Car[]>(`${URL}/car/best`)\n      .pipe(catchError(handleErrors))\n      .pipe(map(cars => cars.splice(2)));\n  }\n\n  /**\n   * Get latest comments for specialOffers\n   */\n  getLatestComments(): Observable<Comment[]> {\n    return this.http.get<Comment[]>(`${URL}/comments`)\n      .pipe(catchError(handleErrors));\n  }\n\n  private getAuthHeader() {\n    const token = this.localStore.getToken();\n    return token && {\n      Authorization: token\n    };\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule, DatePipe, DecimalPipe} from '@angular/common';\nimport {SearchComponent} from './search/search.component';\nimport {SubSearchComponent} from './sub-search/sub-search.component';\nimport {SearchNavigatorComponent} from './search-navigator/search-navigator.component';\nimport {FiltersComponent} from './filters/filters.component';\nimport {MapComponent} from './map/map.component';\nimport {CarDetailsComponent} from './car-details/car-details.component';\nimport {SearchResultsComponent} from './search-results/search-results.component';\nimport {LetCarWorkComponent} from './let-car-work/let-car-work.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {SpecialOffersComponent} from './special-offers/special-offers.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {SatDatepickerModule, SatNativeDateModule} from 'saturn-datepicker';\nimport {ServiceModule} from '../service/service.module';\nimport {CarsHttpService} from './cars-http.service';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {NgxSliderModule} from '@m0t0r/ngx-slider';\n\n\n@NgModule({\n  declarations: [SearchComponent, SubSearchComponent, SearchNavigatorComponent, FiltersComponent, MapComponent, CarDetailsComponent,\n    SearchResultsComponent, LetCarWorkComponent, SpecialOffersComponent, FooterComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    NgxSliderModule,\n    ReactiveFormsModule,\n    SatDatepickerModule,\n    SatNativeDateModule,\n    MatPaginatorModule,\n    ServiceModule,\n    MatChipsModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    SearchComponent,\n    SpecialOffersComponent,\n    FooterComponent\n  ],\n  providers: [\n    DatePipe, DecimalPipe, CarsHttpService\n  ]\n})\nexport class CarsModule {\n}\n","import {ValidatorFn} from '@angular/forms';\n\nexport class DatesRangeValidator {\n\n  constructor() {\n  }\n\n  public static get validator(): ValidatorFn {\n    return control => {\n      const value = control?.value;\n      const dateStart: Date = new Date(value?.begin);\n      const dateEnd: Date = new Date(value?.end);\n      if (dateEnd?.getTime() - dateStart?.getTime() < 86400000) {\n        return {\n          minRange: 'Range mast be more than 1 day'\n        }\n      }\n      return null;\n    }\n  }\n}\n","<div class=\"filter-card\">\n  <h1 class=\"title\">Find your car now!</h1>\n  <form (submit)=\"search()\" [formGroup]=\"filtersForm\">\n    <div class=\"select-container\">\n      <label #makeLabel class=\"select-label\" for=\"make\">Make</label>\n      <select [carInput]=\"makeLabel\" formControlName=\"make\" id=\"make\">\n        <option [value]=\"''\"></option>\n        <option *ngFor=\"let filter of filters\" [value]=\"filter.make\">\n          {{filter.make}}\n        </option>\n      </select>\n    </div>\n    <div class=\"select-container\">\n      <label #modelLabel class=\"select-label\" for=\"model\">Model</label>\n      <select [carInput]=\"modelLabel\" formControlName=\"model\" id=\"model\">\n        <option [value]=\"''\"></option>\n        <option *ngFor=\"let model of getModels(this.filtersForm.controls.make.value)\" [value]=\"model.model\">\n          {{model.model}}\n        </option>\n      </select>\n    </div>\n    <div class=\"input-container\">\n      <label #yearLabel class=\"input-label\" for=\"year\">Year</label>\n      <input [carInput]=\"yearLabel\" formControlName=\"year\" id=\"year\" type=\"number\">\n      <div *ngIf=\"filtersForm.controls.year.errors\" class=\"error\">\n        Wrong year\n      </div>\n    </div>\n    <div class=\"select-container\">\n      <label #fuelLabel class=\"select-label\" for=\"fuel\">Fuel</label>\n      <select [carInput]=\"fuelLabel\" formControlName=\"fuel\" id=\"fuel\">\n        <option [value]=\"''\"></option>\n        <option *ngFor=\"let fuel of fuelTypes\" [value]=\"fuel.value\">\n          {{fuel.name}}\n        </option>\n      </select>\n    </div>\n    <div class=\"select-container\">\n      <label #gearLabel class=\"select-label\" for=\"gear\">Gear</label>\n      <select [carInput]=\"gearLabel\" formControlName=\"gear\" id=\"gear\">\n        <option [value]=\"''\"></option>\n        <option *ngFor=\"let gear of gearTypes\" [value]=\"gear.value\">\n          {{gear.name}}\n        </option>\n      </select>\n    </div>\n    <div class=\"select-container\">\n      <label #wheelsDriveLabel class=\"select-label\" for=\"wheelsDrive\">WD</label>\n      <select [carInput]=\"wheelsDriveLabel\" formControlName=\"wheelsDrive\" id=\"wheelsDrive\">\n        <option [value]=\"''\"></option>\n        <option *ngFor=\"let wheelsDrive of wheelsDriveTypes\" [value]=\"wheelsDrive.value\">\n          {{wheelsDrive.name}}\n        </option>\n      </select>\n    </div>\n    <button type=\"submit\">Search</button>\n  </form>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {CarsHttpService, Filter, Model, SearchCarRequest} from '../cars-http.service';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {FuelType} from '../fuel';\nimport {WheelsDriveTypes} from '../wheels-drive';\nimport {GearTypes} from '../gear-types';\nimport {ActivatedRoute, NavigationExtras, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss']\n})\n\nexport class FiltersComponent implements OnInit {\n\n  fuelTypes = FuelType.getFuels();\n  wheelsDriveTypes = WheelsDriveTypes.getWheelsDrives();\n  gearTypes = GearTypes.getGears();\n  filters: Filter[];\n  routeParams: SearchCarRequest = {};\n  filtersForm: FormGroup;\n\n  constructor(private httpService: CarsHttpService, private route: ActivatedRoute, private router: Router,\n              private formBuilder: FormBuilder) {\n  }\n\n  async ngOnInit() {\n    this.initFiltersForm();\n    this.filters = await this.httpService.getFilters().toPromise();\n    this.filters.sort((a, b) => a.make.localeCompare(b.make));\n    this.filters.forEach(value => value.models.sort((a, b) => a.model.localeCompare(b.model)));\n    this.route.queryParams.subscribe(params => {\n      this.routeParams = Object.assign({}, params);\n      this.updateForm();\n    });\n  }\n\n  search() {\n    this.routeParams = {...this.routeParams, ...this.filtersForm.value};\n    this.routeParams.currentPage = 0;\n    const searchParams: NavigationExtras = {\n      queryParams: this.routeParams\n    };\n    this.router.navigate(['search/results'], searchParams).then();\n  }\n\n  private initFiltersForm() {\n    const makeControl = new FormControl();\n    const modelControl = new FormControl();\n    const fuelControl = new FormControl();\n    const yearControl = new FormControl(null, [\n      Validators.max(new Date().getFullYear()),\n      Validators.min(1885)\n    ]);\n    const gearControl = new FormControl();\n    const wheelsDriveControl = new FormControl();\n    makeControl.valueChanges.subscribe(value => {\n      if (value) {\n        modelControl.enable();\n      } else {\n        modelControl.disable();\n      }\n    });\n    this.filtersForm = this.formBuilder.group({\n      make: makeControl,\n      model: modelControl,\n      year: yearControl,\n      fuel: fuelControl,\n      gear: gearControl,\n      wheelsDrive: wheelsDriveControl\n    });\n  }\n\n  private updateForm() {\n    this.filtersForm.get('make').setValue(this.routeParams.make);\n    this.filtersForm.get('model').setValue(this.routeParams.model);\n    this.filtersForm.get('year').setValue(this.routeParams.year);\n    this.filtersForm.get('fuel').setValue(this.routeParams.fuel);\n    this.filtersForm.get('gear').setValue(this.routeParams.gear);\n    this.filtersForm.get('wheelsDrive').setValue(this.routeParams.wheelsDrive);\n  }\n\n  getModels(make: string): Model [] | undefined {\n    return this.filters?.find(value => value.make === make)?.models;\n  }\n}\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {LocalStoreService} from '../../local-store.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  height = 280;\n\n  constructor(private cd: ChangeDetectorRef, private localStore: LocalStoreService) {\n  }\n\n  ngOnInit() {\n  }\n\n  get loggedInFlag() {\n    return this.localStore.getToken();\n  }\n\n  showTitle(height: number) {\n    if (this.height !== height) {\n      this.height = height;\n      this.cd.detectChanges();\n    }\n  }\n}\n","<div class=\"footer-container\">\n  <span class=\"description\">Best solution for rent your car when you are on holiday</span>\n  <a class=\"logo\" href=\"/\">\n    <img src=\"../../../assets/images/navigator/logo.svg\">\n  </a>\n  <div class=\"social-networks\">\n    <a href=\"https://www.facebook.com/\"><i class=\"icon-facebook-squared\"></i></a>\n    <a href=\"https://telegram.org/\"><i class=\"icon-telegram\"></i></a>\n    <a href=\"https://vk.com/\"><i class=\"icon-vkontakte\"></i></a>\n    <a href=\"https://www.instagram.com/\"><i class=\"icon-instagram\"></i></a>\n    <a href=\"https://slack.com/\"><i class=\"icon-slack\"></i></a>\n  </div>\n  <div class=\"title-container\"  [ngStyle]=\"{'transform':'skew(45deg) translateX(calc(' + height / 2 + ' * -1px - 8vw))'}\" #title>\n    {{showTitle(title.clientHeight)}}\n    <div class=\"title\" [ngStyle]=\"{'margin-right':  height / 2 + 'px', 'margin-left': 'calc(' + height / 2 + 'px + 8vw)'}\">The ultimate car rental service</div>\n  </div>\n  <div class=\"page-links\">\n    <a href=\"search\">Search</a>\n    <a href=\"let-car-work\">Let the car work</a>\n    <a href=\"terms-of-use\">Terms of use</a>\n    <ng-container *ngIf=\"!loggedInFlag; else logout\">\n      <a href=\"registration\">Sign up</a>\n      <a href=\"login\">Log in</a>\n    </ng-container>\n    <ng-template #logout><a href=\"logout\">Log out</a></ng-template>\n  </div>\n  <div class=\"top-cities-container\">\n    <span class=\"title\">Top cities</span>\n    <div class=\"top-cities\">\n      <a href=\"search/results?city=Rome\">Rome</a>\n      <a href=\"search/results?city=Tokyo\">Tokyo</a>\n      <a href=\"search/results?city=Paris\">Paris</a>\n      <a href=\"search/results?city=London\">London</a>\n      <a href=\"search/results?city=Los%20Angeles\">Los Angeles</a>\n      <a href=\"search/results?city=Moscow\">Moscow</a>\n      <a href=\"search/results?city=Warsaw\">Warsaw</a>\n      <a href=\"search/results?city=Berlin\">Berlin</a>\n      <a href=\"search/results?city=Vienna\">Vienna</a>\n      <a href=\"search/results?city=Tel%20Aviv\">Tel Aviv</a>\n    </div>\n  </div>\n  <address class=\"address-container\">\n    <a class=\"telephone\" href=\"tel:886-720-5721\">866-720-5721</a>\n    <a class=\"address\" href=\"https://www.google.com/maps?q=1600 Amphitheatre Pkwy Mountain View, CA 94043, USA\">\n      1600 Amphitheatre Pkwy<br> Mountain View, CA 94043, USA</a>\n  </address>\n</div>\n","export class FuelType {\n    static readonly DIESEL = new FuelType('Diesel', 'Diesel');\n    static readonly PETROL = new FuelType('Petrol', 'Petrol');\n    static readonly HYBRID = new FuelType('Hybrid', 'Hybrid');\n    static readonly ELECTRIC = new FuelType('Electric', 'Electric');\n    static readonly GAS = new FuelType('Gas', 'Gas');\n\n    private constructor(public readonly value: string, public readonly name) {\n    }\n\n    static getFuels(): FuelType[] {\n      return [FuelType.DIESEL, FuelType.PETROL, FuelType.HYBRID, FuelType.ELECTRIC, FuelType.GAS];\n    }\n}\n","export class GearTypes {\n  static readonly AT = new GearTypes('AT', 'AT');\n  static readonly MT = new GearTypes('MT', 'MT');\n  static readonly SMT = new GearTypes('SMT', 'SMT');\n\n  private constructor(public readonly value: string, public readonly name) {\n  }\n\n  static getGears(): GearTypes[] {\n    return [\n      this.AT, this.MT, this.SMT\n    ];\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpEvent, HttpEventType, HttpHeaders, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, last, map} from 'rxjs/operators';\n\ninterface FileUpload {\n  uploaded: boolean;\n  percentage?: number;\n  data?: ImgurResult;\n}\n\ninterface ImgurResult {\n  data: ImgurData;\n  success: boolean;\n  status: number;\n}\n\ninterface ImgurData {\n  id?: string;\n  title?: string;\n  description?: string;\n  datetime?: number;\n  type?: string;\n  animated?: boolean;\n  deletehash?: string;\n  name?: string;\n  link?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImgurPhotoService {\n\n  readonly URL = 'https://api.imgur.com/3/image';\n\n  constructor(private httpService: HttpClient) {\n  }\n\n  uploadPhoto(file: File): Observable<FileUpload> {\n    const formData = new FormData();\n    formData.append('image', file);\n    const req = new HttpRequest('POST', this.URL, formData, {\n      reportProgress: true,\n      headers: new HttpHeaders().append('Authorization', `Client-ID 22aa3aa25869147`)\n    });\n    return this.httpService.request(req).pipe(\n      map(event => this.getEventMessage(event)),\n      catchError(this.handleErrors)\n    );\n  }\n\n  private handleErrors(error: HttpErrorResponse) {\n    if (!error.status) {\n      return throwError(`Connection error, try again`);\n    }\n    if (error.status === 400) {\n      return throwError('Bad image');\n    }\n    if (error.status === 429) {\n      return throwError('To much photo uploaded. Please try again later');\n    }\n    return throwError(error);\n  }\n\n  private getEventMessage(event: HttpEvent<any>): FileUpload {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        return {uploaded: false, percentage: 0};\n      case HttpEventType.UploadProgress:\n        const percentage = Math.round(event.loaded / event.total * 100);\n        return {uploaded: false, percentage}\n      case HttpEventType.Response:\n        return {uploaded: true, data: event.body}\n      default:\n        return {uploaded: false};\n    }\n  }\n}\n","<div class=\"progress-container\" *ngIf=\"loading\">\n  <mat-spinner></mat-spinner>\n</div>\n<div class=\"car-card\">\n  <h1 class=\"title\">\n    Let the car work\n  </h1>\n  <h2 class=\"subtitle\">\n    Write some details about your car to rent it out\n  </h2>\n  <form (submit)=\"addCar()\" [formGroup]=\"carDetailForm\">\n    <label class=\"part-label\">Location:</label>\n    <div class=\"input-container\">\n      <input #addressInput autocomplete=\"address\" formControlName=\"pickUpPlace\" id=\"pickUpPlace\"\n             placeholder=\"Enter your address\"\n             type=\"text\">\n      <div *ngIf=\"isControlInvalid('pickUpPlace')\" class=\"error\">\n        Wrong address\n      </div>\n    </div>\n    <div class=\"address-data\">{{addressText}}\n    </div>\n    <label class=\"part-label\">Car details:</label>\n    <div class=\"input-container\">\n      <label #makeLabel class=\"input-label\" for=\"make\">Make <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"makeLabel\" formControlName=\"make\" id=\"make\" type=\"text\">\n      <div *ngIf=\"isControlInvalid('make')\" class=\"error\">\n        Make is required\n      </div>\n    </div>\n    <div class=\"input-container\">\n      <label #modelLabel class=\"input-label\" for=\"model\">Model <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"modelLabel\" formControlName=\"model\" id=\"model\" type=\"text\">\n      <div *ngIf=\"isControlInvalid('model')\" class=\"error\">\n        Model is required\n      </div>\n    </div>\n    <div class=\"input-container\">\n      <label #yearLabel class=\"input-label\" for=\"year\">Year <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"yearLabel\" formControlName=\"year\" id=\"year\" type=\"number\">\n      <div *ngIf=\"isControlInvalid('year')\" class=\"error\">\n        <div\n          *ngIf=\"getErrors('year').required  && !getErrors('year').min && !getErrors('year').max\">\n          Year required\n        </div>\n        <div *ngIf=\"getErrors('year').min || getErrors('year').max\">\n          Wrong year\n        </div>\n      </div>\n    </div>\n    <div class=\"input-container\">\n      <label #engineLabel class=\"input-label\" for=\"engine\">Engine <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"engineLabel\" formControlName=\"engine\" id=\"engine\" type=\"text\">\n      <div *ngIf=\"isControlInvalid('engine')\" class=\"error\">\n        Engine is required\n      </div>\n    </div>\n    <div class=\"select-container\">\n      <label #fuelLabel class=\"select-label\" for=\"fuel\">Fuel <span class=\"required-marker\">*</span></label>\n      <select [carInput]=\"fuelLabel\" formControlName=\"fuel\" id=\"fuel\">\n        <option *ngFor=\"let fuel of fuelTypes\" [value]=\"fuel.value\">\n          {{fuel.name}}\n        </option>\n      </select>\n      <div *ngIf=\"isControlInvalid('fuel')\" class=\"error\">\n        Fuel is required\n      </div>\n    </div>\n    <div class=\"select-container\">\n      <label #gearLabel class=\"select-label\" for=\"gear\">Gear <span class=\"required-marker\">*</span></label>\n      <select [carInput]=\"gearLabel\" formControlName=\"gear\" id=\"gear\">\n        <option *ngFor=\"let gear of gearTypes\" [value]=\"gear.value\">\n          {{gear.name}}\n        </option>\n      </select>\n      <div *ngIf=\"isControlInvalid('gear')\" class=\"error\">\n        Gear is required\n      </div>\n    </div>\n    <div class=\"select-container\">\n      <label #WDLabel class=\"select-label\" for=\"wheelsDrive\">WD <span class=\"required-marker\">*</span></label>\n      <select [carInput]=\"WDLabel\" formControlName=\"wheelsDrive\" id=\"wheelsDrive\">\n        <option *ngFor=\"let wheelsDrive of wheelsDriveTypes\" [value]=\"wheelsDrive.value\">\n          {{wheelsDrive.name}}\n        </option>\n      </select>\n      <div *ngIf=\"isControlInvalid('wheelsDrive')\" class=\"error\">\n        Wheels drive required\n      </div>\n    </div>\n    <div class=\"input-container\">\n      <label #doorsLabel class=\"input-label\" for=\"doors\">Doors <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"doorsLabel\" formControlName=\"doors\" id=\"doors\" type=\"number\">\n      <div *ngIf=\"isControlInvalid('doors')\" class=\"error\">\n        <div *ngIf=\"getErrors('doors').required\">\n          Number of doors is required\n        </div>\n        <div *ngIf=\"getErrors('doors').min\">\n          Car must have min 2 door\n        </div>\n        <div *ngIf=\"getErrors('doors').max\">\n          To much doors\n        </div>\n      </div>\n    </div>\n    <div class=\"input-container\">\n      <label #seatsLabel class=\"input-label\" for=\"seats\">Seats <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"seatsLabel\" formControlName=\"seats\" id=\"seats\" type=\"number\">\n      <div *ngIf=\"isControlInvalid('seats')\" class=\"error\">\n        <div *ngIf=\"getErrors('seats').required\">\n          Number of seats is required\n        </div>\n        <div *ngIf=\"getErrors('seats').min\">\n          Car must have min 2 seat\n        </div>\n        <div *ngIf=\"getErrors('seats').max\">\n          To much seats\n        </div>\n      </div>\n    </div>\n    <div class=\"input-container\">\n      <label #carClassLabel class=\"input-label\" for=\"class\">Car class <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"carClassLabel\" formControlName=\"carClass\" id=\"class\" type=\"text\">\n      <div *ngIf=\"isControlInvalid('carClass')\" class=\"error\">\n        Car class is required\n      </div>\n    </div>\n    <div class=\"input-container\">\n      <label #fuelConsumptionLabel class=\"input-label\" for=\"fuelConsumption\">Fuel consumption <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"fuelConsumptionLabel\" autocomplete=\"none\" formControlName=\"fuelConsumption\"\n             id=\"fuelConsumption\" type=\"number\">\n      <div *ngIf=\"isControlInvalid('fuelConsumption')\" class=\"error\">\n        Fuel consumption is required\n        <div *ngIf=\"getErrors('fuelConsumption').required\">\n          Fuel consumption is required\n        </div>\n        <div *ngIf=\"getErrors('fuelConsumption').min\">\n          Fuel consumption must be positive\n        </div>\n        <div *ngIf=\"getErrors('fuelConsumption').max\">\n          To much big fuel consumption\n        </div>\n      </div>\n    </div>\n    <div class=\"input-container\">\n      <label #serialNumberLabel class=\"input-label\" for=\"serialNumber\">Car registration number <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"serialNumberLabel\" formControlName=\"serialNumber\" id=\"serialNumber\" type=\"text\">\n      <div *ngIf=\"isControlInvalid('serialNumber')\" class=\"error\">\n        <div *ngIf=\"getErrors('serialNumber').required\">Car registration number is required</div>\n        <div *ngIf=\"getErrors('serialNumber').maxlength\">To long car registration number</div>\n      </div>\n    </div>\n    <div class=\"input-container\">\n      <label #priceLabel class=\"input-label\" for=\"price\">Price <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"priceLabel\" formControlName=\"price\" id=\"price\" type=\"number\">\n      <div *ngIf=\"isControlInvalid('price')\" class=\"error\">\n        <div *ngIf=\"getErrors('price').required\">\n          Price is required\n        </div>\n        <div *ngIf=\"getErrors('price').min\">\n          Price must be positive\n        </div>\n        <div *ngIf=\"getErrors('price').max\">\n          To much big price\n        </div>\n\n      </div>\n    </div>\n    <div class=\"input-container\">\n      <label #distanceLabel class=\"input-label\" for=\"distance\">Distance included <span class=\"required-marker\">*</span></label>\n      <input [carInput]=\"distanceLabel\" formControlName=\"distance\" id=\"distance\" type=\"number\">\n      <div *ngIf=\"isControlInvalid('distance')\" class=\"error\">\n        <div *ngIf=\"getErrors('distance').required\">\n          Included distance is required\n        </div>\n        <div *ngIf=\"getErrors('distance').min\">\n          Included distance must be positive\n        </div>\n      </div>\n    </div>\n    <label class=\"part-label\">Features:</label>\n    <div class=\"input-container\">\n      <input #input (change)=\"features[i] = input.value\" *ngFor=\"let feature of features; index as i\" [value]=\"feature\"\n             class=\"feature-input\" placeholder=\"Type feature\" type=\"text\">\n      <button (click)=\"features.push('')\" [disabled]=\"!features[features.length-1]\" type=\"button\">Add feature</button>\n    </div>\n    <label class=\"part-label\">About:</label>\n    <div class=\"input-container about-container\">\n      <textarea formControlName=\"about\" id=\"about\" placeholder=\"About (max 500 chars)\" rows=\"10\" type=\"text\"></textarea>\n    </div>\n    <label class=\"part-label\">Photos of your car:</label>\n    <div class=\"file-input-container\">\n      <input #uploadImage (change)=\"uploadFiles(uploadImage.files)\" formControlName=\"photos\" id=\"photos\" multiple\n             type=\"file\">\n      <label class=\"file-input-label\" for=\"photos\">{{fileNames}}</label>\n    </div>\n    <div *ngFor=\"let file of files\" class=\"files-chip-container\">\n      <mat-chip-list>\n        <mat-chip (removed)=\"removePhoto(file)\" [disabled]=\"photosUrlsMap.get(file) === ''\" removable=\"true\"\n                  selectable=\"false\">\n          {{photoNamesMap.get(file)}}\n          <i class=\"icon-cancel-circled\" matChipRemove></i>\n        </mat-chip>\n      </mat-chip-list>\n      <mat-progress-bar *ngIf=\"photosProgressMap.get(file) as progress\" [value]=\"progress\"></mat-progress-bar>\n    </div>\n    <button [disabled]=\"!isFormValid()\" type=\"submit\">Submit</button>\n  </form>\n</div>\n<app-footer></app-footer>\n","import {AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ImgurPhotoService} from '../imgur-photo.service';\nimport {Title} from '@angular/platform-browser';\nimport {FuelType} from '../fuel';\nimport {WheelsDriveTypes} from '../wheels-drive';\nimport {GearTypes} from '../gear-types';\nimport {Car, CarsHttpService, Place} from '../cars-http.service';\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DialogBuilder} from '../../service/dialog/dialog-builder';\nimport {AuthenticationError, AuthorizationError, BadRequestError, ConflictError, ConnectionError} from '../../errors';\nimport {finalize} from 'rxjs/operators';\nimport {\n  clearFilesForSave,\n  clearFromData,\n  clearSavedAutocomplete,\n  restoreAutocomplete, restoreFiles,\n  restoreFormData,\n  saveAutocomplete, saveFiles,\n  saveFormData\n} from '../../tools';\nimport {StaticLocationService} from '../../service/static-location.service';\n\ninterface CarFormResult {\n  make: string;\n  model: string;\n  year: string;\n  engine: string;\n  fuel: string;\n  gear: string;\n  wheelsDrive: string;\n  serialNumber: string;\n  doors: number;\n  seats: number;\n  fuelConsumption: number;\n  futures: string;\n  carClass: string;\n  price: number;\n  about: string\n  distance: number;\n  pickUpPlace: string;\n}\n\n\n@Component({\n  selector: 'app-let-car-work',\n  templateUrl: './let-car-work.component.html',\n  styleUrls: ['./let-car-work.component.scss'],\n})\nexport class LetCarWorkComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @ViewChild('addressInput', {static: true}) addressInput: ElementRef;\n\n  fuelTypes = FuelType.getFuels();\n  wheelsDriveTypes = WheelsDriveTypes.getWheelsDrives();\n  gearTypes = GearTypes.getGears();\n  photoUrls: string[] = [];\n  carDetailForm: FormGroup;\n  features: string[] = [''];\n  fileNames = 'Add photos of your car';\n  addressText: string;\n  photosUrlsMap: Map<File, string> = new Map<File, string>();\n  photosProgressMap: Map<File, number> = new Map<File, number>();\n  photoNamesMap: Map<File, string> = new Map<File, string>();\n  loading = false;\n  private url: string;\n  private place: Place;\n  places: any[] = [];\n\n  constructor(private photoService: ImgurPhotoService, private formBuilder: FormBuilder, public title: Title,\n              private httpService: CarsHttpService, private router: Router, private cd: ChangeDetectorRef, private dialog: MatDialog,\n              private staticLocationService: StaticLocationService) {\n  }\n\n  ngOnDestroy(): void {\n    this.carDetailForm.controls.pickUpPlace.setValue(this.addressInput.nativeElement.value);\n    this.carDetailForm.controls.photos.setValue(null);\n    saveFormData(this.carDetailForm, this.url);\n    saveAutocomplete(this.place);\n    saveFiles({\n      photoNamesMap: this.photoNamesMap,\n      photosProgressMap: this.photosProgressMap,\n      photosUrlsMap: this.photosUrlsMap\n    })\n  }\n\n  ngOnInit() {\n    this.url = this.router.url;\n    this.title.setTitle('Let the car work!');\n    this.initForm();\n    this.places = this.staticLocationService.getPlaces();\n  }\n\n  ngAfterViewInit() {\n    this.addPickupPlaceValidator();\n    this.cd.detectChanges();\n  }\n\n  uploadFiles(files: FileList) {\n    for (let i = 0; i < files.length; i++) {\n      const photo = files.item(i);\n      this.photosUrlsMap.set(photo, '');\n      this.photosProgressMap.set(photo, 0);\n      this.photoNamesMap.set(photo, photo.name);\n      this.photoService.uploadPhoto(photo).subscribe(data => {\n        if (data.uploaded) {\n          this.photosUrlsMap.set(photo, data.data.data.link);\n          this.photosProgressMap.delete(photo);\n        } else {\n          if (data.percentage) {\n            this.photosProgressMap.set(photo, data.percentage);\n          }\n        }\n      }, error => {\n        this.photosProgressMap.delete(photo);\n        this.photosUrlsMap.delete(photo);\n        this.photoNamesMap.set(photo, `Not loaded: ${photo.name}`);\n      });\n    }\n  }\n\n  addCar() {\n    const urls = Array.from(this.photosUrlsMap.values());\n    if (urls.includes('')) {\n      this.carDetailForm.controls.photos.setErrors({\n        notLoaded: 'photos not loaded'\n      });\n      this.carDetailForm.controls.photos.updateValueAndValidity();\n      return;\n    }\n\n    if (urls.length === 0) {\n      this.carDetailForm.controls.photos.setErrors({\n        required: 'Photos required'\n      });\n      this.carDetailForm.controls.photos.updateValueAndValidity();\n      return;\n    }\n    const car = this.mapFormResultToCar(this.carDetailForm.value);\n    this.loading = true;\n    this.httpService.addCar(car)\n      .pipe(finalize(() => this.loading = false))\n      .subscribe(response => this.carAdded(response), error => this.showError(error));\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.carDetailForm.controls[controlName];\n    return control.touched && control.invalid;\n  }\n\n  getErrors(controlName: string) {\n    return this.carDetailForm.controls[controlName].errors;\n  }\n\n  removePhoto(file: File) {\n    this.photosUrlsMap.delete(file);\n    this.photosProgressMap.delete(file);\n    this.photoNamesMap.delete(file);\n  }\n\n\n  isFormValid() {\n    const urls = Array.from(this.photosUrlsMap.values());\n    if (urls.includes('')) {\n      this.carDetailForm.controls.photos.setErrors({\n        notLoaded: 'photos not loaded'\n      });\n      this.carDetailForm.controls.photos.updateValueAndValidity();\n      return false;\n    }\n\n    if (urls.length === 0) {\n      this.carDetailForm.controls.photos.setErrors({\n        required: 'Photos required'\n      });\n      this.carDetailForm.controls.photos.updateValueAndValidity();\n      return false;\n    }\n    return this.carDetailForm.valid;\n  }\n\n  private showError(error) {\n    if (error instanceof ConnectionError) {\n      new DialogBuilder(this.dialog)\n        .title('Connection error')\n        .message('Check your connection and try again')\n        .negativeBtn('Close')\n        .positiveBtn('Try again', this.addCar.bind(this))\n        .show();\n    } else if (error instanceof AuthorizationError) {\n      new DialogBuilder(this.dialog)\n        .title('Authorization error')\n        .message('You need login or register before rent car')\n        .negativeBtn('Close')\n        .neutralBtn('Registration', () => this.router.navigate(['/registration'],\n          {queryParams: {url: decodeURI(this.router.url)}}\n        ))\n        .positiveBtn('Login', () => this.router.navigate(['/login'],\n          {queryParams: {url: decodeURI(this.router.url)}}\n        ))\n        .show();\n    } else if (error instanceof AuthenticationError) {\n      new DialogBuilder(this.dialog)\n        .title('Forbidden')\n        .message('You cant add car from this account')\n        .positiveBtn('Ok')\n        .show();\n    } else if (error instanceof BadRequestError) {\n      new DialogBuilder(this.dialog)\n        .title('Bad request')\n        .message('Wrong car data')\n        .positiveBtn('Ok')\n        .show();\n    } else if (error instanceof ConflictError) {\n      new DialogBuilder(this.dialog)\n        .title('Conflict')\n        .message('Car with this serial number already exists')\n        .positiveBtn('Ok')\n        .show();\n    } else {\n      new DialogBuilder(this.dialog)\n        .title('Something goes wrong')\n        .positiveBtn('Try again', this.addCar.bind(this))\n        .negativeBtn('Close')\n        .show();\n    }\n  }\n\n  private carAdded(car: Car) {\n    this.carDetailForm.reset();\n    this.photosUrlsMap = new Map<File, string>();\n    this.photosProgressMap = new Map<File, number>();\n    this.photoNamesMap = new Map<File, string>();\n    this.place = null;\n    this.addressText = '';\n    clearFromData(this.url);\n    clearSavedAutocomplete();\n    clearFilesForSave();\n    new DialogBuilder(this.dialog)\n      .title('Car added')\n      .message(`${car.make} ${car.model} added successful`)\n      .positiveBtn('Show car', () => this.router.navigate(['car', car.serial_number]))\n      .negativeBtn('Add another car', () => this.router.navigate(['let-car-work']))\n      .neutralBtn('Search cars', () => this.router.navigate(['/']))\n      .show();\n  }\n\n  private initForm() {\n    const makeControl = new FormControl(null, Validators.required);\n    const modelControl = new FormControl(null, Validators.required);\n    const yearControl = new FormControl(null, [\n      Validators.required,\n      Validators.min(0),\n      Validators.max(new Date().getFullYear())\n    ]);\n    const engineControl = new FormControl(null, Validators.required);\n    const fuelControl = new FormControl(null, Validators.required);\n    const gearControl = new FormControl(null, Validators.required);\n    const wheelsDriveControl = new FormControl(null, Validators.required);\n    const serialNumberControl = new FormControl(null, [Validators.required, Validators.maxLength(15)]);\n    const doorsControl = new FormControl(null, [Validators.required, Validators.min(2), Validators.max(8)]);\n    const seatsControl = new FormControl(null, [Validators.required, Validators.min(2), Validators.max(20)]);\n    const fuelConsumptionControl = new FormControl(null, [Validators.required, Validators.min(0), Validators.max(100)]);\n    const carClassControl = new FormControl(null, Validators.required);\n    const pricePerDayControl = new FormControl(null, [Validators.required, Validators.min(0), Validators.max(1000)]);\n    const aboutControl = new FormControl(null);\n    const distanceIncludeControl = new FormControl(null, [Validators.required, Validators.min(0)]);\n    const pickUpPlaceControl = new FormControl(null, {\n      updateOn: 'blur'\n    });\n    const imagesControl = new FormControl(null);\n    pickUpPlaceControl.setErrors({error: `wrong address`});\n    this.carDetailForm = this.formBuilder.group({\n      make: makeControl,\n      model: modelControl,\n      year: yearControl,\n      engine: engineControl,\n      fuel: fuelControl,\n      gear: gearControl,\n      wheelsDrive: wheelsDriveControl,\n      serialNumber: serialNumberControl,\n      doors: doorsControl,\n      seats: seatsControl,\n      fuelConsumption: fuelConsumptionControl,\n      carClass: carClassControl,\n      price: pricePerDayControl,\n      about: aboutControl,\n      distance: distanceIncludeControl,\n      pickUpPlace: pickUpPlaceControl,\n      photos: imagesControl\n    });\n    restoreFormData(this.carDetailForm, this.url);\n    if (!this.addressText)\n      this.addressText = this.carDetailForm.controls.pickUpPlace.value\n    const files = restoreFiles();\n    this.photosUrlsMap = files?.photosUrlsMap || new Map<File, string>();\n    this.photosProgressMap = files?.photosProgressMap || new Map<File, number>();\n    this.photoNamesMap = files?.photoNamesMap || new Map<File, string>();\n  }\n\n  private mapFormResultToCar: (value: CarFormResult) => Car =\n    ({futures, pickUpPlace, wheelsDrive, serialNumber, fuelConsumption, carClass, distance, price, ...value}) => {\n      return {\n        ...value,\n        price_per_day: price,\n        distance_included: distance,\n        serial_number: serialNumber,\n        fuel_consumption: fuelConsumption,\n        wheels_drive: wheelsDrive,\n        car_class: carClass,\n        image_url: Array.from(this.photosUrlsMap.values()),\n        features: this.features,\n        pick_up_place: this.place\n      } as Car;\n    };\n\n  private addPickupPlaceValidator() {\n    const control = this.carDetailForm.get('pickUpPlace');\n    if (!this.place)\n      control.setErrors({addressError: ''});\n\n    control.valueChanges.subscribe(value => {\n      const selectedPlace = this.places.find(place => place.formatted_address === value);\n      if (selectedPlace) {\n        this.place = {\n          longitude: selectedPlace.longitude,\n          latitude: selectedPlace.latitude,\n          place_id: selectedPlace.place_id\n        };\n        this.addressText = selectedPlace.formatted_address;\n        control.setErrors(null);\n        this.cd.detectChanges();\n      } else if (!this.place) {\n        control.setErrors({addressError: ''});\n      }\n    });\n  }\n\n  onPlaceSelect(place: any) {\n    this.place = {\n      longitude: place.longitude,\n      latitude: place.latitude,\n      place_id: place.place_id\n    };\n    this.addressText = place.formatted_address;\n    this.carDetailForm.get('pickUpPlace').setValue(place.formatted_address);\n    this.carDetailForm.get('pickUpPlace').setErrors(null);\n    this.cd.detectChanges();\n  }\n\n  get files() {\n    return Array.from(this.photoNamesMap.keys());\n  }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, NavigationExtras, Router} from '@angular/router';\nimport {Car, CarsHttpService, SearchCarRequest} from '../cars-http.service';\nimport {DecimalPipe} from '@angular/common';\nimport {finalize} from 'rxjs/operators';\nimport {AuthorizationError, ConnectionError, NotFoundError} from '../../errors';\nimport {DialogBuilder} from '../../service/dialog/dialog-builder';\nimport {MatDialog} from '@angular/material/dialog';\nimport {StaticLocationService} from '../../service/static-location.service';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css'],\n\n})\nexport class MapComponent implements OnInit {\n  showLoading = true;\n  @ViewChild('mapContainer', {static: true}) mapContainer: ElementRef;\n  params: SearchCarRequest;\n  cars: Car[] = [];\n\n\n  constructor(private route: ActivatedRoute, private http: CarsHttpService, private router: Router, private decimalPipe: DecimalPipe,\n              private dialog: MatDialog, private staticLocationService: StaticLocationService) {\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.params = Object.assign({}, params);\n      this.loadCars();\n    });\n  }\n\n  private loadCars() {\n    this.showLoading = true;\n    this.http.getAllCars(this.params)\n      .pipe(finalize(() => this.showLoading = false))\n      .subscribe(cars => this.onCarsLoaded(cars), this.onError.bind(this));\n  }\n\n  private onCarsLoaded(cars: Car[]) {\n    this.cars = cars;\n  }\n\n  private onError(error) {\n    if (error instanceof ConnectionError) {\n      new DialogBuilder(this.dialog)\n        .title('Connection error')\n        .message('Check your connection and try again')\n        .negativeBtn('Close')\n        .positiveBtn('Try again', this.loadCars.bind(this))\n        .show();\n    } else {\n      new DialogBuilder(this.dialog)\n        .title('Something goes wrong')\n        .positiveBtn('Try again',  this.loadCars.bind(this))\n        .negativeBtn('Close')\n        .show();\n    }\n  }\n\n  navigateToCar(car: Car) {\n    const searchParams: NavigationExtras = {\n      queryParams: {\n        startDate: this.params.startDate,\n        endDate: this.params.endDate\n      }\n    };\n    this.router.navigate(['/car', car.serial_number], searchParams).then();\n  }\n}\n","<div\n  #googleMap\n  class=\"gMap\"\n  [hidden]=\"showLoading\"></div>\n<mat-spinner *ngIf=\"showLoading\" class=\"loading\"></mat-spinner>\n","import {Component, OnInit} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-search-navigator',\n  templateUrl: './search-navigator.component.html',\n  styleUrls: ['./search-navigator.component.scss'],\n  animations: [\n    trigger('ngSwitch', [\n      state('show', style({\n      })),\n      transition('void => show', [style({\n        transform: 'translateX(100%)'\n      }), animate('200ms')])\n    ]),\n    trigger('ngSwitchTabs', [\n      state('show', style({\n        transform: 'skewX(45deg)'\n      })),\n      transition('void => *', [style({\n        transform: 'translateX(100%) skewX(45deg)'\n      }), animate('200ms')])\n    ]),\n  ]\n})\nexport class SearchNavigatorComponent implements OnInit {\n  currentTab = 1;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n\n","<div class=\"nav-tabs animated fadeIn\" [ngSwitch]=\"currentTab\">\n  <ng-template [ngSwitchCase]=\"1\">\n    <div class=\"nav-tab active-tab search\" [@ngSwitchTabs]=\"'show'\" (click)=\"currentTab = 1\">\n      <label class=\"tab-label\">\n        <i class=\"icon-search\"></i>\n        Search\n      </label>\n    </div>\n    <div class=\"nav-tab filter \"  [@ngSwitchTabs]=\"'show'\" (click)=\"currentTab = 2\">\n      <label class=\"tab-label\">\n        <i class=\"icon-sliders\"></i>\n      </label>\n    </div>\n    <div class=\"nav-tab map \" [@ngSwitchTabs]=\"'show'\" (click)=\"currentTab = 3\">\n      <label class=\"tab-label\">\n        <i class=\"icon-location\"></i>\n      </label>\n    </div>\n  </ng-template>\n  <ng-template [ngSwitchCase]=\"2\">\n    <div class=\"nav-tab active-tab filter \" [@ngSwitchTabs]=\"'show'\" (click)=\"currentTab = 2\">\n      <label class=\"tab-label\">\n        <i class=\"icon-sliders\"></i>\n        Filters\n      </label>\n    </div>\n    <div class=\"nav-tab map \" [@ngSwitchTabs]=\"'show'\" (click)=\"currentTab = 3\">\n      <label class=\"tab-label\">\n        <i class=\"icon-location\"></i>\n      </label>\n    </div>\n    <div class=\"nav-tab search \" [@ngSwitchTabs]=\"'show'\" (click)=\"currentTab = 1\">\n      <label class=\"tab-label\">\n        <i class=\"icon-search\"></i>\n      </label>\n    </div>\n  </ng-template>\n  <ng-template [ngSwitchCase]=\"3\">\n    <div class=\"nav-tab active-tab map \" [@ngSwitchTabs]=\"'show'\" (click)=\"currentTab = 3\">\n      <label class=\"tab-label\">\n        <i class=\"icon-location\"></i>\n        Map\n      </label>\n    </div>\n    <div class=\"nav-tab search \" [@ngSwitchTabs]=\"'show'\" (click)=\"currentTab = 1\">\n      <label class=\"tab-label\">\n        <i class=\"icon-search\"></i>\n      </label>\n    </div>\n    <div class=\"nav-tab filter \" [@ngSwitchTabs]=\"'show'\" (click)=\"currentTab = 2\">\n      <label class=\"tab-label\">\n        <i class=\"icon-sliders\"></i>\n      </label>\n    </div>\n  </ng-template>\n</div>\n<ng-container>\n  <div [@ngSwitch]=\"currentTab===1?'show':'void'\" [hidden]=\"currentTab!==1\"><app-sub-search></app-sub-search></div>\n  <div [@ngSwitch]=\"currentTab===2?'show':'void'\" [hidden]=\"currentTab!==2\"><app-filters></app-filters></div>\n  <div [@ngSwitch]=\"currentTab===3?'show':'void'\" [hidden]=\"currentTab!==3\"><app-map></app-map></div>\n</ng-container>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, NavigationExtras, Router} from '@angular/router';\nimport {Car, CarsHttpService, SearchCarRequest, SearchResults} from '../cars-http.service';\nimport {PageEvent} from '@angular/material/paginator';\nimport {Title} from '@angular/platform-browser';\nimport {ConnectionError} from '../../errors';\nimport {DialogBuilder} from '../../service/dialog/dialog-builder';\nimport {MatDialog} from '@angular/material/dialog';\nimport {compareCars} from '../../tools';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.scss']\n})\nexport class SearchResultsComponent implements OnInit {\n  cars: Car[];\n  city: string;\n  startDate: string;\n  endDate: string;\n  private minPrice: number;\n  private maxPrice: number;\n  private sortByPriceFromLowToHigh = true;\n  private params: SearchCarRequest;\n  page = 0;\n  length = 0;\n  pageSize = 10;\n\n  constructor(private httpService: CarsHttpService, private router: Router, private route: ActivatedRoute, private title: Title,\n              private dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    /**\n     * Get query params for for search request\n     */\n    this.route.queryParams.subscribe(params => {\n      this.city = params.city;\n      this.startDate = params.startDate;\n      this.endDate = params.endDate;\n      this.minPrice = params.minPrice;\n      this.maxPrice = params.maxPrice;\n      this.sortByPriceFromLowToHigh = params.ascending === undefined ? true : params.ascending === 'true';\n      this.page = params.currentPage;\n      this.pageSize = params.itemsOnPage;\n      this.title.setTitle(`Cars in ${this.city}`);\n      this.params = Object.assign({}, params);\n      this.search();\n    });\n  }\n\n  /**\n   * Change page:\n   * On change page click receive\n   * @param event - param with data about changed page\n   * and change current page by navigating\n   */\n  changePage(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.page = event.pageIndex;\n    this.params.currentPage = this.page;\n    this.params.itemsOnPage = this.pageSize;\n    const searchParams: NavigationExtras = {\n      queryParams: this.params\n    };\n    this.router.navigate(['/search/results'], searchParams).then();\n  }\n\n  /**\n   * Get cars from server with params\n   */\n  search() {\n    const cars = this.cars;\n    this.cars = undefined;\n    this.httpService.searchCarsByFilters(this.params)\n      .subscribe(results => this.onSearchSuccess (results), error => this.onSearchError(error, cars));\n  }\n\n  private onSearchError(error: any, cars: Car[]) {\n    this.cars = cars;\n    if (error instanceof ConnectionError) {\n      new DialogBuilder(this.dialog)\n        .title('Connection error')\n        .message('Check your connection and try again')\n        .negativeBtn('Close')\n        .positiveBtn('Try again', this.search.bind(this))\n        .show();\n    } else {\n      new DialogBuilder(this.dialog)\n        .title('Something goes wrong')\n        .positiveBtn('Try again', this.search.bind(this))\n        .negativeBtn('Close')\n        .show();\n    }\n  }\n\n  private onSearchSuccess(searchResults: SearchResults) {\n    this.length = searchResults.items_total;\n    this.cars = searchResults.cars.sort((car1, car2) => compareCars(car1, car2, this.sortByPriceFromLowToHigh));\n  }\n}\n","<div class=\"search-results-card\">\n  <div class=\"search-result-navigator\">\n    <app-search-navigator></app-search-navigator>\n  </div>\n  <div class=\"search-results\">\n    <ng-container *ngIf=\"cars; else loading\">\n      <ng-container *ngIf=\"cars.length>0; else noCars\">\n        <div class=\"cars-container\">\n          <a *ngFor=\"let car of cars\" [href]=\"'/car/'+car.serial_number+'?startDate='+startDate+'&endDate='+endDate\"\n             class=\"car-container\">\n            <car-card [car]=\"car\"></car-card>\n          </a>\n        </div>\n        <mat-paginator (page)=\"changePage($event)\" [length]=\"length\" [pageIndex]=\"page\" [pageSizeOptions]=\"[10, 20, 50]\"\n                       [pageSize]=\"pageSize\">\n        </mat-paginator>\n      </ng-container>\n    </ng-container>\n    <ng-template #loading>\n      <mat-spinner class=\"loading\"></mat-spinner>\n    </ng-template>\n    <ng-template #noCars>\n      <h3 class=\"no-cars-label\">No available cars in {{city}}</h3>\n    </ng-template>\n  </div>\n</div>\n<app-footer></app-footer>\n","import {ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {NavigationExtras, Router} from '@angular/router';\nimport {DatePipe} from '@angular/common';\nimport {SatDatepickerRangeValue} from 'saturn-datepicker';\nimport {Title} from '@angular/platform-browser';\nimport {CarsHttpService} from '../cars-http.service';\nimport {FormGroup, FormBuilder, Validators, FormControl} from '@angular/forms';\nimport {DatesRangeValidator} from '../dates-range-validator';\nimport {mapDate, restoreCityValue, restoreFormData, saveCityValue, saveFormData} from '../../tools';\nimport {StaticLocationService} from '../../service/static-location.service';\n\ninterface SearchRequest {\n  city: string;\n  dates: SatDatepickerRangeValue<Date>;\n}\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n\n  @ViewChild('cityInput', {static: true}) cityInput: ElementRef;\n  private url = 'search';\n  private cityValue: string;\n  cities: any[] = [];\n\n  constructor(private datePipe: DatePipe, private router: Router, private title: Title, private formBuilder: FormBuilder,\n              private staticLocationService: StaticLocationService) {\n  }\n\n  minStartDate: Date = new Date();\n  searchForm: FormGroup;\n  maxDate: Date = new Date(this.minStartDate.getTime() + 31536000000);\n\n  ngOnInit() {\n    this.title.setTitle('Search');\n    this.initSearchForm();\n    this.cities = this.staticLocationService.getCities();\n    this.addCityValidator();\n  }\n\n  ngOnDestroy(): void {\n    this.searchForm.controls.city.setValue(this.cityInput.nativeElement.value);\n    saveFormData(this.searchForm, this.url);\n    saveCityValue(this.cityValue);\n  }\n\n  search(request: SearchRequest) {\n    const searchParams: NavigationExtras = {\n      queryParams: {\n        city: this.cityValue,\n        startDate: mapDate(request.dates.begin),\n        endDate: mapDate(request.dates.end)\n      }\n    };\n    this.router.navigate(['/search/results'], searchParams).then();\n  }\n\n  private initSearchForm() {\n    const cityControl = new FormControl(null, Validators.required);\n    const datesControl = new FormControl(null, [Validators.required, DatesRangeValidator.validator]);\n    this.searchForm = this.formBuilder.group({\n      city: cityControl,\n      dates: datesControl\n    });\n    restoreFormData(this.searchForm, this.url);\n    const value = this.searchForm.controls.dates.value;\n    if (value) {\n      this.searchForm.controls.dates.setValue({\n        begin: new Date(value.begin),\n        end: new Date(value.end),\n      })\n    }\n    this.cityValue = restoreCityValue();\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.searchForm.controls[controlName];\n    return control?.touched && control?.invalid;\n  }\n\n  getErrors(controlName: string) {\n    return this.searchForm.controls[controlName]?.errors;\n  }\n\n  private addCityValidator() {\n    const control = this.searchForm.get('city');\n    if (!this.cityValue)\n      control.setErrors({addressError: ''});\n\n    control.valueChanges.subscribe(value => {\n      const selectedCity = this.cities.find(city => city.name === value || city.short_name === value);\n      if (selectedCity) {\n        this.cityValue = selectedCity.short_name;\n        control.setErrors(null);\n      } else if (!this.cityValue) {\n        control.setErrors({addressError: ''});\n      }\n    });\n  }\n\n  onCitySelect(city: any) {\n    this.cityValue = city.short_name;\n    this.searchForm.get('city').setValue(city.name);\n    this.searchForm.get('city').setErrors(null);\n  }\n}\n","<div class=\"search-card\">\n  <div class=\"search-container\">\n    <h1 class=\"title\">Find your car now!</h1>\n    <h2 class=\"subtitle\">Type your data and hit Yalla!</h2>\n    <form (submit)=\"search(searchForm.value)\" [formGroup]=\"searchForm\">\n      <div class=\"input-container\">\n        <label #cityLabel class=\"input-label\" for=\"city\">City <span class=\"required-marker\">*</span></label>\n        <input #cityInput [carInput]=\"cityLabel\" formControlName=\"city\" id=\"city\" placeholder=\"\" type=\"text\">\n        <div *ngIf=\"isControlInvalid('city')\" class=\"error\">\n          City is required\n        </div>\n      </div>\n      <div class=\"input-container\">\n        <label #datesLabel class=\"input-label\" for=\"dates\">Dates <span class=\"required-marker\">*</span></label>\n        <input (click)=\"datePicker.open()\" [carInput]=\"datesLabel\" [max]=\"maxDate\" [min]=\"minStartDate\"\n               [satDatepicker]=\"datePicker\" formControlName=\"dates\" id=\"dates\">\n        <sat-datepicker #datePicker [rangeMode]=\"true\"></sat-datepicker>\n        <div *ngIf=\"isControlInvalid('dates')\" class=\"error\">\n          <div\n            *ngIf=\"getErrors('dates')?.required  && !getErrors('date')?.matDatepickerParse\">\n            Dates are required\n          </div>\n          <div *ngIf=\"getErrors('dates')?.matDatepickerMin\">\n            You can't pick date before today\n          </div>\n\n          <div *ngIf=\"getErrors('dates')?.matDatepickerRange\">\n            Second date must be after first date\n          </div>\n          <div *ngIf=\"getErrors('dates')?.minRange\">\n            You can't book car for less than a day\n          </div>\n          <div *ngIf=\"getErrors('dates')?.matDatepickerMax\">\n            You can't pick date after one year\n          </div>\n        </div>\n      </div>\n      <button [disabled]=\"searchForm.invalid\" type=\"submit\">Y’alla!</button>\n    </form>\n  </div>\n</div>\n<app-special-offers></app-special-offers>\n<app-footer></app-footer>\n","import {Component, OnInit} from '@angular/core';\nimport {Car, CarsHttpService, Comment} from '../cars-http.service';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-special-offers',\n  templateUrl: './special-offers.component.html',\n  styleUrls: ['./special-offers.component.scss']\n})\nexport class SpecialOffersComponent implements OnInit {\n  cars: Observable<Car[]>;\n  comments: Observable<Comment[]>;\n\n  constructor(private httpService: CarsHttpService) {\n  }\n\n  ngOnInit() {\n    this.cars = this.httpService.getBestCars();\n    this.comments = this.httpService.getLatestComments();\n  }\n}\n","<div class=\"special-offers-container\">\n  <div class=\"title-container\">\n    <div class=\"red-line-triangle\"></div>\n    <span class=\"title\">\n      Never mistaken for anything else\n    </span>\n    <span class=\"description\">One of the best services for renting car for holiday. Here you can rent every car that you want in every city with good prices</span>\n    <div class=\"action-container\">\n      <span class=\"action\">Affordable prices</span>\n      <span class=\"action\">Guaranteed cars</span>\n      <a class=\"login-btn\" href=\"login\">Join now!</a>\n    </div>\n  </div>\n  <div class=\"subtitle-container\">\n    <div class=\"cars-count-container\">\n      <span class=\"cars-count\">3</span>\n      <span class=\"title\">most popular choices in your area</span>\n    </div>\n    <span class=\"description\">The most popular car that we have on our service. You can rent very of them for best price. Just click on them</span>\n  </div>\n  <div class=\"offers-container\">\n    <div class=\"red line\"></div>\n    <div class=\"cars-container\">\n      <a *ngFor=\"let car of cars|async\" [href]=\"'car/'+car.serial_number\">\n        <div class=\"car-img-container\">\n          <div [ngStyle]=\"{backgroundImage: 'url('+car.image_url[0]+')'}\" class=\"car-image\"></div>\n        </div>\n        <div class=\"car-details-container\">\n          <span class=\"car-title\">\n            {{car.make}} {{car.model}} {{car.year}}\n          </span>\n          <div class=\"car-price-label\">\n            <car-price-label [car]=\"car\"></car-price-label>\n          </div>\n        </div>\n      </a>\n    </div>\n    <div class=\"right-top red-triangle\"></div>\n    <div class=\"right-top black-triangle\"></div>\n    <div class=\"left-bottom red-triangle\"></div>\n    <div class=\"bottom\">\n      <div class=\"red line\">\n      </div>\n      <div class=\"black line\">\n      </div>\n    </div>\n    <div class=\"left-bottom black-triangle\"></div>\n  </div>\n  <div class=\"feedback-container\">\n    <span class=\"title\">\n      Latest feedback from our customers\n    </span>\n    <div class=\"feedback-body\">\n      <div class=\"feedback\">\n        <span class=\"feedback-text\">\n          Fabulous car!\n          Excellent driving, perfect exterior, very comfortable inside.\n          Not so dramatic consumption.\n          It was great experience!\n        </span>\n        <span class=\"feedback-name\">Brian O'Corner</span>\n        <span class=\"feedback-date\">8 March 2020</span>\n      </div>\n      <div class=\"feedback\">\n        <span class=\"feedback-text\">\n          Car is easy driving, good looking and has fantastic speed skill.\n          My friend also enjoyed the car.\n          We would love to come back !\n          We had amazing week with amazing vehicle.\n        </span>\n        <span class=\"feedback-name\">Barbara Dror</span>\n        <span class=\"feedback-date\">19 January 2020</span>\n      </div>\n      <div class=\"feedback\">\n        <span class=\"feedback-text\">\n          Our car was modern and extremely well equipped.\n          The facilities are great.\n          Interior trim is of excellent quality.\n          It made us happy after a previous experience in another place.\n        </span>\n        <span class=\"feedback-name\">John Bayramov</span>\n        <span class=\"feedback-date\">25 February 2020</span>\n      </div>\n      <div class=\"feedback\">\n        <span class=\"feedback-text\">\n          Dreaming car with the heart of lion.\n          We’ve made a distance about 500 miles.\n          Modern design. A/C in each zone.\n          We loved to drive it and we really enjoyed our adventure.\n        </span>\n        <span class=\"feedback-name\">Sara Miles</span>\n        <span class=\"feedback-date\">14 March 2020</span>\n      </div>\n      <div class=\"feedback\">\n        <span class=\"feedback-text\">\n          If I’ll be back in Rome I certainly return to it.\n          Lovely transport which had all the amenities one would need at home.\n          Perfect comfort I simply loved it.\n          I highly recommend this car. :)\n        </span>\n        <span class=\"feedback-name\">Acacio Frascella</span>\n        <span class=\"feedback-date\">12 January 2020</span>\n      </div>\n      <div class=\"feedback\">\n        <span class=\"feedback-text\">\n          This car exceeded my expectations.\n          One of the best vehicles i have had till now at a generous price.\n          The host were really helpful and friendly.\n          Would definitely recommend it to everyone.\n        </span>\n        <span class=\"feedback-name\">Cirilla Di Gennaro</span>\n        <span class=\"feedback-date\">12 February 2020</span>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"sub-search-card\">\n  <h1 class=\"title\">\n    Find your car now!\n  </h1>\n  <form (submit)=\"search()\" [formGroup]=\"searchForm\">\n\n    <div class=\"input-container\">\n      <label #cityLabel class=\"input-label\" for=\"city\">City</label>\n      <input #cityInput [carInput]=\"cityLabel\" formControlName=\"city\" id=\"city\" placeholder=\"\" type=\"text\">\n    </div>\n\n    <div class=\"input-container\">\n      <label #datesLabel class=\"input-label\">Dates <span class=\"required-marker\">*</span></label>\n      <input (click)=\"datePicker.open()\" [carInput]=\"datesLabel\" [min]=\"minStartDate\" [satDatepicker]=\"datePicker\"\n             formControlName=\"dates\" [max]=\"maxDate\">\n      <sat-datepicker #datePicker [rangeMode]=\"true\"></sat-datepicker>\n      <div *ngIf=\"isControlInvalid('dates')\" class=\"error\">\n        <div *ngIf=\"getErrors('dates').required  && !getErrors('dates').matDatepickerParse\">\n          Dates are required\n        </div>\n        <div *ngIf=\"getErrors('dates').matDatepickerMin\">\n          You can't pick date before today\n        </div>\n        <div *ngIf=\"getErrors('dates').matDatepickerRange\">\n          Second date must be after first date\n        </div>\n        <div *ngIf=\"getErrors('dates').matDatepickerParse\">\n          Date doesn't exists\n        </div>\n        <div *ngIf=\"getErrors('dates')?.minRange\">\n          You can't book car for less than a day\n        </div>\n        <div *ngIf=\"getErrors('dates')?.matDatepickerMax\">\n          You can't pick date after one year\n        </div>\n      </div>\n    </div>\n\n    <div class=\"sort-by-container\">\n      <label class=\"input-label\">Sort by price:</label>\n      <input formControlName=\"ascending\" id=\"low-to-high\" type=\"radio\" value=\"true\">\n      <label class=\"sort-by-label\" for=\"low-to-high\">\n        <label for=\"low-to-high\">Low to high</label>\n      </label>\n      <input formControlName=\"ascending\" id=\"high-to-low\" type=\"radio\" value=\"false\">\n      <label class=\"sort-by-label\" for=\"high-to-low\">\n        <label for=\"high-to-low\">High to low</label>\n      </label>\n    </div>\n\n\n    <div *ngIf=\"options\" class=\"custom-slider\">\n      <label class=\"input-label\" for=\"priceRange\">Price range ($/per day):</label>\n      <ngx-slider [options]=\"options\" formControlName=\"priceRange\" id=\"priceRange\"></ngx-slider>\n    </div>\n    <button [disabled]=\"searchForm.invalid\" type=\"submit\">Search</button>\n  </form>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Options} from '@m0t0r/ngx-slider';\nimport {ActivatedRoute, NavigationExtras, Router} from '@angular/router';\nimport {DatePipe} from '@angular/common';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {CarsHttpService, SearchCarRequest} from '../cars-http.service';\nimport {DatesRangeValidator} from '../dates-range-validator';\nimport {StaticLocationService} from '../../service/static-location.service';\n\n@Component({\n  selector: 'app-sub-search',\n  templateUrl: './sub-search.component.html',\n  styleUrls: ['./sub-search.component.scss']\n})\nexport class SubSearchComponent implements OnInit {\n\n  @ViewChild('cityInput', {static: true}) cityInput: ElementRef;\n  cities: any[] = [];\n\n  minStartDate: Date = new Date();\n  options: Options;\n  routeParams: SearchCarRequest = {};\n  searchForm: FormGroup;\n  maxDate: Date = new Date(this.minStartDate.getTime() + 31536000000);\n\n  constructor(private router: Router, private datePipe: DatePipe, private formBuilder: FormBuilder,\n              private route: ActivatedRoute, private httpService: CarsHttpService, private staticLocationService: StaticLocationService) {\n  }\n\n  ngOnInit() {\n    this.initSearchForm();\n    this.cities = this.staticLocationService.getCities();\n    this.route.queryParams.subscribe(params => {\n      const city = params.city;\n      this.routeParams = Object.assign({}, params);\n      this.setSearchFormValues();\n      const minMaxPromise = this.httpService.getMaxAndMinPrices({\n        city\n      });\n      minMaxPromise.then(minMaxValues => {\n        if (minMaxValues.max !== -1 && minMaxValues.min !== -1) {\n          const newOptions: Options = Object.assign({}, this.options);\n          newOptions.floor = Math.floor(minMaxValues.min);\n          newOptions.ceil = Math.ceil(minMaxValues.max);\n          const values = [];\n          values[0] = Math.floor(this.routeParams.minAmount || minMaxValues.min);\n          values[1] = Math.ceil(this.routeParams.maxAmount || minMaxValues.max);\n          this.options = newOptions;\n          this.searchForm.controls.priceRange.setValue(values);\n        }\n      });\n    });\n  }\n\n  search() {\n    this.routeParams = this.mapFormToRouteParams(this.searchForm.value);\n    const searchParams: NavigationExtras = {\n      queryParams: this.routeParams\n    };\n    this.router.navigate(['/search/results'], searchParams).then();\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.searchForm.controls[controlName];\n    return control.touched && control.invalid;\n  }\n\n  getErrors(controlName: string) {\n    return this.searchForm.controls[controlName].errors;\n  }\n\n\n  private mapDate(date: Date): string {\n    return this.datePipe.transform(date, 'yyyy-MM-dd HH:mm');\n  }\n\n  private initSearchForm() {\n    const datesControl = new FormControl(null, [Validators.required, DatesRangeValidator.validator]);\n    const sortByControl = new FormControl();\n    const priceSliderControl = new FormControl();\n    const cityControl = new FormControl();\n    this.searchForm = this.formBuilder.group({\n      dates: datesControl,\n      ascending: sortByControl,\n      priceRange: priceSliderControl,\n      city: cityControl\n    });\n  }\n\n  private setSearchFormValues() {\n    this.searchForm.controls.dates.setValue({\n      begin: new Date(this.routeParams.startDate),\n      end: new Date(this.routeParams.endDate)\n    });\n    this.searchForm.controls.ascending.setValue(this.routeParams.ascending || 'true');\n    const min = this.routeParams.minAmount || 0;\n    const max = this.routeParams.maxAmount || 100;\n    this.searchForm.controls.priceRange.setValue([\n      parseInt('' + min, 10), parseInt('' + max, 10) // min and max converts to string without this parse\n    ]);\n    this.searchForm.controls.city.setValue(this.routeParams.city);\n  }\n\n  private mapFormToRouteParams =\n    ({dates, priceRange, city, ...value}) => {\n      let resCity;\n      let minAmount = priceRange[0];\n      let maxAmount = priceRange[1];\n      if (city === '') {\n        resCity = '';\n      } else {\n        const selectedCity = this.cities.find(c => c.name === city || c.short_name === city);\n        if (selectedCity) {\n          resCity = selectedCity.short_name;\n        } else {\n          resCity = this.routeParams.city;\n        }\n      }\n      if (resCity !== this.routeParams.city) {\n        minAmount = null;\n        maxAmount = null;\n      }\n      return {\n        ...value,\n        startDate: this.mapDate(dates.begin),\n        endDate: this.mapDate(dates.end),\n        minAmount,\n        maxAmount,\n        city: resCity\n      };\n    };\n\n  onCitySelect(city: any) {\n    this.searchForm.get('city').setValue(city.name);\n  }\n}\n","export class WheelsDriveTypes {\n\n  static readonly RWD = new WheelsDriveTypes('RWD', 'RWD');\n  static readonly AWD = new WheelsDriveTypes('AWD', 'AWD');\n  static readonly FWD = new WheelsDriveTypes('FWD', 'FWD');\n\n  private constructor(public readonly value: string, public readonly name) {\n  }\n\n  static getWheelsDrives(): WheelsDriveTypes[] {\n    return [\n      this.RWD, this.AWD, this.FWD\n    ];\n  }\n}\n","import {HttpErrorResponse} from '@angular/common/http';\nimport {throwError} from 'rxjs';\n\nexport class ConnectionError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nexport class AuthorizationError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nexport class AuthenticationError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nexport class ConflictError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nexport class BadRequestError extends Error{\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nexport class NotFoundError extends Error{\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nexport function handleErrors(error: HttpErrorResponse) {\n  if (!error.status) {\n    return throwError(new ConnectionError(`Server isn't available, try again`));\n  }\n  switch (error.status) {\n    case 400: return throwError(new BadRequestError('Wrong request params'));\n    case 401: return throwError(new AuthorizationError('Wrong email or password'));\n    case 403: return throwError(new AuthenticationError('You are not allowed to do this action'));\n    case 404: return throwError(new NotFoundError('Not found'));\n    case 409: return throwError(new ConflictError('Conflict'));\n    default: return throwError(new Error(error.message));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n\nconst TOKEN = 'TOKEN';\nconst NAME = 'NAME';\nconst LAST_NAME = 'LAST_NAME';\nconst EMAIL = 'EMAIL';\nconst PHONE = 'PHONE';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStoreService {\n\n  constructor() { }\n\n  saveToken(token: string) {\n    localStorage.setItem(TOKEN, token);\n  }\n\n  getToken(): string | null{\n    return localStorage.getItem(TOKEN);\n  }\n\n  deleteToken() {\n    localStorage.removeItem(TOKEN);\n  }\n\n  saveName(firstName: string) {\n    localStorage.setItem(NAME, firstName);\n  }\n\n  getName(): string | null {\n    return localStorage.getItem(NAME);\n  }\n\n  deleteName() {\n    localStorage.removeItem(NAME);\n  }\n\n  saveLastName(lastName: string) {\n    localStorage.setItem(LAST_NAME, lastName);\n  }\n\n  getLastName(): string | null{\n    return localStorage.getItem(LAST_NAME);\n  }\n\n  deleteLastName() {\n    localStorage.removeItem(LAST_NAME);\n  }\n\n  saveEmail(email: string) {\n    localStorage.setItem(EMAIL, email);\n  }\n\n  getEmail(): string | null {\n    return localStorage.getItem(EMAIL);\n  }\n\n  deleteEmail() {\n    localStorage.removeItem(EMAIL);\n  }\n\n  savePhoneNumber(phoneNumber: string) {\n    localStorage.setItem(PHONE, phoneNumber);\n  }\n\n  getPhoneNumber(): string | null {\n    return localStorage.getItem(PHONE);\n  }\n\n  deletePhoneNumber() {\n    localStorage.removeItem(PHONE);\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Car} from '../../cars/cars-http.service';\n\n@Component({\n  selector: 'car-card',\n  templateUrl: './car-card.component.html',\n  styleUrls: ['./car-card.component.scss']\n})\nexport class CarCardComponent implements OnInit {\n\n  @Input('car') car: Car;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"car-card\">\n  <ng-container *ngIf=\"car\">\n    <div class=\"car-img-container\" [ngStyle]=\"{backgroundImage: 'url('+car.image_url[0]+')'}\"></div>\n    <car-details [car]=\"car\" class=\"details-card\"></car-details>\n  </ng-container>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Car} from '../../cars/cars-http.service';\n\n@Component({\n  selector: 'car-details',\n  templateUrl: './car-details.component.html',\n  styleUrls: ['./car-details.component.scss']\n})\nexport class CarDetailsComponent implements OnInit {\n\n  @Input() car: Car;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ng-container *ngIf=\"car\">\n  <div class=\"details-container\">\n    <span class=\"title\">{{car.make}} {{car.model}}<span class=\"year\">{{car.year}}</span></span>\n    <car-price-label [car]=\"car\"></car-price-label>\n  </div>\n</ng-container>\n","import {\n  AfterViewChecked,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input\n} from '@angular/core';\n\n@Directive({\n  selector: '[carInput]'\n})\nexport class CarInputDirective implements AfterViewChecked {\n\n  @Input('carInput') label: HTMLLabelElement;\n\n  constructor(public el1: ElementRef) {\n  }\n\n  @HostListener('focusin') onMouseEnter() {\n    this.label.classList.add('dirty');\n  }\n\n  @HostListener('focusout') onMouseLeave() {\n    if (!this.el1.nativeElement.value) {\n      this.label.classList.remove('dirty');\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.el1.nativeElement.value) {\n      this.label.classList.add('dirty');\n    }\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Car} from '../../cars/cars-http.service';\n\n@Component({\n  selector: 'car-price-label',\n  templateUrl: './car-price-label.component.html',\n  styleUrls: ['./car-price-label.component.scss']\n})\nexport class CarPriceLabelComponent implements OnInit {\n  @Input() car: Car;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"car-price-container\">\n  <span class=\"car-price-prefix\">$</span>\n  <span class=\"car-price-value\">{{car.price_per_day|number: '1.0-1'}}</span>\n  <span class=\"car-price-label\">per day</span>\n</div>\n","import {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {DialogComponent, DialogData} from './dialog.component';\n\nexport class DialogBuilder {\n  private readonly params: MatDialogConfig<DialogData>;\n  private negativeBtnListener: () => void;\n  private neutralBtnListener: () => void;\n  private positiveBtnListener: () => void;\n\n\n  constructor(private dialog: MatDialog) {\n    this.params = new MatDialogConfig<DialogData>();\n    this.params.data = {};\n  }\n\n  public title(title: string) {\n    this.params.data.title = title;\n    return this;\n  }\n\n  public message(message: string) {\n    this.params.data.message = message;\n    return this;\n  }\n\n  public negativeBtn(message: string, listener?: () => void) {\n    this.params.data.negativeBtn = message;\n    this.negativeBtnListener = listener;\n    return this;\n  }\n\n  public neutralBtn(message: string, listener?: () => void) {\n    this.params.data.neutralBtn = message;\n    this.neutralBtnListener = listener;\n    return this;\n  }\n\n  public positiveBtn(message: string, listener?: () => void) {\n    this.params.data.positiveBtn = message;\n    this.positiveBtnListener = listener;\n    return this;\n  }\n\n  public show() {\n    const dialogRef = this.dialog.open(DialogComponent, this.params);\n    dialogRef.afterClosed().subscribe(value => {\n      if (value.negative) {\n        this.negativeBtnListener();\n      }\n      if (value.neutral) {\n        this.neutralBtnListener();\n      }\n      if (value.positive) {\n        this.positiveBtnListener();\n      }\n    });\n    return dialogRef;\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nexport interface DialogData {\n  title?: string;\n  message?: string;\n  negativeBtn?: string;\n  neutralBtn?: string;\n  positiveBtn?: string;\n}\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  title: string;\n  message: string;\n  negativeBtn: string;\n  neutralBtn: string;\n  positiveBtn: string;\n\n  constructor(@Inject(MAT_DIALOG_DATA) dialogData: DialogData) {\n    this.title = dialogData.title;\n    this.message = dialogData.message;\n    this.negativeBtn = dialogData.negativeBtn;\n    this.neutralBtn = dialogData.neutralBtn;\n    this.positiveBtn = dialogData.positiveBtn;\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"dialog-container\">\n  <h1 class=\"title\">{{title}}</h1>\n  <h2 class=\"message\">{{message}}</h2>\n  <div class=\"buttons-container\">\n    <button [matDialogClose]=\"{negative: true}\" class=\"negative-button\" *ngIf=\"negativeBtn\">{{negativeBtn}}</button>\n    <button [matDialogClose]=\"{neutral: true}\" class=\"neutral-button\" *ngIf=\"neutralBtn\">{{neutralBtn}}</button>\n    <button [matDialogClose]=\"{positive: true}\" class=\"positive-button\" *ngIf=\"positiveBtn\">{{positiveBtn}}</button>\n  </div>\n</div>\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'image-slider',\n  templateUrl: './image-slider.component.html',\n  styleUrls: ['./image-slider.component.scss']\n})\nexport class ImageSliderComponent implements OnInit {\n\n  @ViewChild('sliderContainer', {static: true}) sliderContainer: ElementRef;\n\n  @Input('photos') photoUrls: string[] = [];\n  @Input('slideTimeout') slideTimeout = 5;\n\n  containerHeight = '100%';\n\n  private _currentPhoto = 0;\n  private interval;\n  private timeout;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.containerHeight = `${this.sliderContainer.nativeElement.offsetWidth * 9 / 16}px`;\n    this.setSlideInterval();\n  }\n\n  set currentPhoto(n: number) {\n    const sliderLength = this.photoUrls.length;\n    if (n < 0)\n      this.currentPhoto = n + sliderLength;\n    else if (n >= sliderLength)\n      this.currentPhoto = n - sliderLength;\n    else {\n      this._currentPhoto = n;\n    }\n  }\n\n  get currentPhoto(): number {\n    return this._currentPhoto;\n  }\n\n  minusClick() {\n    this.currentPhoto--;\n    this.setSlideInterval();\n\n  }\n\n  plusClick() {\n    this.currentPhoto++\n    this.setSlideInterval();\n  }\n\n  private setSlideInterval() {\n    clearTimeout(this.timeout);\n    clearInterval(this.interval);\n    this.timeout = setTimeout(() =>\n        this.interval = setInterval(() =>\n          this.currentPhoto++, this.slideTimeout * 1000),\n      this.slideTimeout * 1000);\n  }\n}\n","<div class=\"slider-container\" #sliderContainer [ngStyle]=\"{'height': containerHeight}\">\n  <img *ngFor=\"let image of photoUrls; let i = index\" [src]=\"image\"\n       [ngClass]=\"{'hidden-left': i < currentPhoto, 'hidden-right': i > currentPhoto}\">\n  <button class=\"plus-btn\" (click)=\"plusClick()\">\n    <i class=\"icon-right-open\"></i>\n  </button>\n  <button class=\"minus-btn\"(click)=\"minusClick()\">\n    <i class=\"icon-left-open\"></i>\n  </button>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'login-registration-modal',\n  templateUrl: './login-registration-modal.component.html',\n  styleUrls: ['./login-registration-modal.component.scss']\n})\nexport class LoginRegistrationModalComponent implements OnInit {\n  loginFlag = true;\n  loading = false;\n\n  constructor(public dialogRef: MatDialogRef<LoginRegistrationModalComponent>) {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"login-registration-dialog-container\">\n  <h1 class=\"title\">\n    <ng-container *ngIf=\"loginFlag; else registrationLabel\">Log in</ng-container>\n    <ng-template #registrationLabel>Registration</ng-template>\n  </h1>\n  <ng-container *ngIf=\"loginFlag; else registrationTemplate\">\n    <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n    <div [ngClass]=\"{'loading': loading}\">\n      <app-login (loading)=\"loading = $event\" (logged-in)=\"dialogRef.close()\"\n                 (registration)=\"loginFlag = false\"></app-login>\n    </div>\n  </ng-container>\n  <ng-template #registrationTemplate>\n    <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n    <div [ngClass]=\"{'loading': loading}\">\n      <app-registration (loading)=\"loading = $event\" (login)=\"loginFlag = true\"\n                        (registered)=\"dialogRef.close()\"></app-registration>\n    </div>\n  </ng-template>\n</div>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {SharedHttpService} from '../../shared/shared-http.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DialogBuilder} from '../dialog/dialog-builder';\nimport {finalize} from 'rxjs/operators';\nimport {AuthorizationError, ConnectionError} from '../../errors';\n\ninterface LoginData {\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  @Output('logged-in') loggedInEventEmitter = new EventEmitter();\n  @Output('registration') registrationEmitter = new EventEmitter();\n  @Output('loading') loadingEmitter = new EventEmitter();\n\n  loginForm: FormGroup;\n\n  constructor(private sharedService: SharedHttpService, private formBuilder: FormBuilder, private dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  login(loginData: LoginData) {\n    this.loadingEmitter.emit(true);\n    this.sharedService.login(loginData.email, loginData.password)\n      .pipe(finalize(() => this.loadingEmitter.emit(false)))\n      .subscribe((usr) => this.loggedInEventEmitter.emit(),\n        error => this.showError(error, loginData));\n  }\n\n  private showError(error: any, loginData: LoginData) {\n    if (error instanceof ConnectionError) {\n      new DialogBuilder(this.dialog)\n        .title('Connection error')\n        .message('Check your connection and try again')\n        .negativeBtn('Close')\n        .positiveBtn('Try again', () => this.login(loginData))\n        .show();\n    } else if (error instanceof AuthorizationError) {\n      new DialogBuilder(this.dialog)\n        .title('Authorization error')\n        .message('Wrong email or password')\n        .positiveBtn('Ok')\n        .show();\n    } else {\n      new DialogBuilder(this.dialog)\n        .title('Something goes wrong')\n        .positiveBtn('Try again', () => this.login(loginData))\n        .negativeBtn('Close')\n        .show();\n    }\n  }\n\n  private initForm() {\n    this.loginForm = this.formBuilder.group({\n      email: [null, [Validators.email, Validators.required]],\n      password: [null, [Validators.required]]\n    });\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.loginForm.controls[controlName];\n    return control.touched && control.invalid;\n  }\n\n  getErrors(controlName: string) {\n    return this.loginForm.controls[controlName].errors;\n  }\n}\n","<form (submit)=\"login(loginForm.value)\" [formGroup]=\"loginForm\">\n  <div class=\"input-container\">\n    <label #emailLabel class=\"input-label\" for=\"email\">Email <span class=\"required-marker\">*</span></label>\n    <input [carInput]=\"emailLabel\" autocomplete=\"username\" formControlName=\"email\" id=\"email\" type=\"email\">\n    <div *ngIf=\"isControlInvalid('email')\" class=\"error\">\n      <div *ngIf=\"getErrors('email').required\">\n        Email is required\n      </div>\n      <div *ngIf=\"getErrors('email').email\">It'snot look like email</div>\n    </div>\n  </div>\n  <div class=\"input-container\">\n    <label #passwordLabel class=\"input-label\" for=\"password\">Password <span class=\"required-marker\">*</span></label>\n    <input [carInput]=\"passwordLabel\" autocomplete=\"current-password\" formControlName=\"password\" id=\"password\"\n           type=\"password\">\n    <div *ngIf=\"isControlInvalid('password')\" class=\"error\">\n      Password is required\n    </div>\n  </div>\n  <button [disabled]=\"loginForm.invalid\" type=\"submit\">Y’alla!</button>\n</form>\n<label class=\"registration-navigator\">Not registered? <span (click)=\"registrationEmitter.emit()\" class=\"navigator\">Click here</span></label>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {SharedHttpService, User} from '../../shared/shared-http.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DialogBuilder} from '../dialog/dialog-builder';\nimport {MatDialog} from '@angular/material/dialog';\nimport {finalize} from 'rxjs/operators';\nimport {ConflictError, ConnectionError} from '../../errors';\n\ninterface RegistrationData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n  @Output('registered') registeredEventEmitter = new EventEmitter();\n  @Output('login') loginEmitter = new EventEmitter();\n  @Output('loading') loadingEmitter = new EventEmitter();\n\n  registrationForm: FormGroup;\n\n  constructor(private sharedService: SharedHttpService, private formBuilder: FormBuilder, private dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  register(regData: RegistrationData) {\n    const user: User = {\n      first_name: regData.firstName,\n      second_name: regData.lastName\n    };\n    this.loadingEmitter.emit(true);\n    this.sharedService.registration(user, regData.email, regData.password)\n      .pipe(finalize(() => this.loadingEmitter.emit(false)))\n      .subscribe((usr) => {\n        this.registeredEventEmitter.emit();\n      }, error => this.showError(error, regData));\n  }\n\n  private showError(error: any, regData: RegistrationData) {\n    if (error instanceof ConnectionError) {\n      new DialogBuilder(this.dialog)\n        .title('Connection error')\n        .message('Check your connection and try again')\n        .negativeBtn('Close')\n        .positiveBtn('Try again', () => this.register(regData))\n        .show();\n    } else if (error instanceof ConflictError) {\n      new DialogBuilder(this.dialog)\n        .title('Registration error')\n        .message('User with this email already exists')\n        .positiveBtn('Ok')\n        .show();\n    } else {\n      new DialogBuilder(this.dialog)\n        .title('Something goes wrong')\n        .positiveBtn('Try again', () => this.register(regData))\n        .negativeBtn('Close')\n        .show();\n    }\n  }\n\n  private initForm() {\n    this.registrationForm = this.formBuilder.group({\n      firstName: [null, [Validators.required]],\n      lastName: [null, [Validators.required]],\n      email: [null, [Validators.pattern(\n        /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]$  )/\n      )\n        , Validators.required, Validators.email]],\n      password: [null, [Validators.required, Validators.minLength(8), Validators.pattern(/(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)[A-Za-z\\d]*/)]],\n      termsOfUse: [null, [Validators.requiredTrue]]\n    });\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.registrationForm.controls[controlName];\n    return control.touched && control.invalid;\n  }\n\n  getError(controlName: string) {\n    const control = this.registrationForm.controls[controlName];\n    return control.errors;\n  }\n}\n","<form (submit)=\"register(registrationForm.value)\" [formGroup]=\"registrationForm\">\n  <div class=\"input-container\">\n    <label #nameLabel class=\"input-label\" for=\"name\">Name <span class=\"required-marker\">*</span></label>\n    <input [carInput]=\"nameLabel\" autocomplete=\"name\" formControlName=\"firstName\" id=\"name\" type=\"text\">\n    <div *ngIf=\"isControlInvalid('firstName')\" class=\"error\">\n      Name is required\n    </div>\n  </div>\n  <div class=\"input-container\">\n    <label #lastNameLabel class=\"input-label\" for=\"lastName\">Last name <span class=\"required-marker\">*</span></label>\n    <input [carInput]=\"lastNameLabel\" autocomplete=\"family-name\" formControlName=\"lastName\" id=\"lastName\" type=\"text\">\n    <div *ngIf=\"isControlInvalid('lastName')\" class=\"error\">\n      Last name is required\n    </div>\n  </div>\n  <div class=\"input-container\">\n    <label #emailLabel class=\"input-label\" for=\"email\">Email <span class=\"required-marker\">*</span></label>\n    <input [carInput]=\"emailLabel\" autocomplete=\"email\" formControlName=\"email\" id=\"email\" type=\"email\">\n    <div *ngIf=\"isControlInvalid('email')\" class=\"error\">\n      <div *ngIf=\"getError('email').required\">Email is required</div>\n      <div *ngIf=\"getError('email').email\">Wrong email format</div>\n      <div *ngIf=\"getError('email').pattern\">Wrong email format</div>\n    </div>\n  </div>\n  <div class=\"input-container\">\n    <label #passwordLabel class=\"input-label\" for=\"password\">Password <span class=\"required-marker\">*</span></label>\n    <input [carInput]=\"passwordLabel\" autocomplete=\"new-password\" formControlName=\"password\" id=\"password\"\n           type=\"password\">\n    <div *ngIf=\"isControlInvalid('password')\" class=\"error\">\n      <div *ngIf=\"getError('password').required\">Password is required</div>\n      <div *ngIf=\"getError('password').minlength\">Password must contain minimum 8 symbols</div>\n      <div *ngIf=\"getError('password').pattern\">Password must contain 1 uppercase letter, 1 lowercase letter and one number </div>\n    </div>\n  </div>\n  <div class=\"checkbox-container\">\n    <input formControlName=\"termsOfUse\" id=\"terms-of-use\" type=\"checkbox\"><label class=\"checkbox-label terms-label\" for=\"terms-of-use\">\n    I agree to the <a href=\"terms-of-use\">terms of use</a> and <a href=\"privacy-police\">privacy\n    policy</a>\n  </label>\n  </div>\n  <button [disabled]=\"registrationForm.invalid\" type=\"submit\">Y’alla!</button>\n</form>\n<label class=\"login-navigator\">Already registered? <span (click)=\"loginEmitter.emit()\"\n                                                         class=\"navigator\">Click here</span></label>\n","import {Component, Inject, Input, OnInit} from '@angular/core';\nimport {BookPerson, Car, CarsHttpService, ReservationDetails, ReservationResponse} from '../../cars/cars-http.service';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {LocalStoreService} from '../../local-store.service';\nimport {finalize} from 'rxjs/operators';\nimport {DialogBuilder} from '../dialog/dialog-builder';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogConfig, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationError, AuthorizationError, BadRequestError, ConflictError, ConnectionError} from '../../errors';\nimport {Router} from '@angular/router';\nimport {mapDate} from '../../tools';\n\nexport interface ReserveData {\n  car: Car;\n  dateStart: Date;\n  dateEnd: Date;\n}\n\n@Component({\n  selector: 'reserve-modal',\n  templateUrl: './reserve-modal.component.html',\n  styleUrls: ['./reserve-modal.component.scss']\n})\nexport class ReserveModalComponent implements OnInit {\n  car: Car;\n  dateStart: Date;\n  dateEnd: Date;\n\n  reserveForm: FormGroup;\n  loading = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) reserveData: ReserveData, private httpService: CarsHttpService, private router: Router,\n              private localStore: LocalStoreService, private formBuilder: FormBuilder, private dialog: MatDialog,\n              private dialogRef: MatDialogRef<ReserveModalComponent>) {\n    this.car = reserveData.car;\n    this.dateStart = reserveData.dateStart;\n    this.dateEnd = reserveData.dateEnd;\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  reserveCar(person: BookPerson) {\n    this.loading = true;\n    const reservationDetails: ReservationDetails = {\n      start_date_time: mapDate(this.dateStart),\n      end_date_time: mapDate(this.dateEnd),\n      person_who_booked: person\n    };\n    this.localStore.savePhoneNumber(person.phone);\n    this.httpService.reserveCar(this.car.serial_number, reservationDetails)\n      .pipe(finalize(() => this.loading = false))\n      .subscribe(order => this.showSuccess(order), error => this.showError(error, person));\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.reserveForm.controls[controlName];\n    return control?.touched && control?.invalid;\n  }\n\n  getErrors(controlName: string) {\n    return this.reserveForm.controls[controlName]?.errors;\n  }\n\n  getPrice(): number {\n    return this.car.price_per_day *\n      Math.max(1, Math.abs((this.dateEnd?.getTime() - this.dateStart?.getTime()) / 86400000));\n  }\n\n  private initForm() {\n    const firstNameControl = new FormControl(this.getNameOfUser(), Validators.required);\n    const lastNameControl = new FormControl(this.getLastNameOfUser(), Validators.required);\n    const emailControl = new FormControl(this.getEmailOfUser(), [Validators.email, Validators.required]);\n    const phoneControl = new FormControl(this.getPhoneOfUser(), [Validators.required, Validators.pattern(/^\\+?\\d{10,12}$/)]);\n    this.reserveForm = this.formBuilder.group({\n      firstName: firstNameControl,\n      lastName: lastNameControl,\n      phone: phoneControl,\n      email: emailControl\n    });\n  }\n\n  private getNameOfUser(): string | null {\n    return this.localStore.getName();\n  }\n\n  private getLastNameOfUser(): string | null {\n    return this.localStore.getLastName();\n  }\n\n  private getEmailOfUser(): string | null {\n    return this.localStore.getEmail();\n  }\n\n  private getPhoneOfUser(): string | null {\n    return this.localStore.getPhoneNumber();\n  }\n\n  private showSuccess(order: ReservationResponse) {\n    this.dialogRef.close();\n    new DialogBuilder(this.dialog)\n      .title('Order success')\n      .message(`Your order number ${order.order_number}, order price ${order.amount}$`)\n      .positiveBtn('Close', () => window.location.reload())\n      .show();\n  }\n\n  private showError(error: any, person: BookPerson) {\n    if (error instanceof ConnectionError) {\n      new DialogBuilder(this.dialog)\n        .title('Connection error')\n        .message('Check your connection and try again')\n        .negativeBtn('Close')\n        .positiveBtn('Try again', () => this.reserveCar(person))\n        .show();\n    } else if (error instanceof AuthorizationError) {\n      new DialogBuilder(this.dialog)\n        .title('Authorization error')\n        .message('You need login or register before rent car')\n        .negativeBtn('Close')\n        .neutralBtn('Registration', () => this.router.navigate(['/registration'],\n          {queryParams: {url: decodeURI(this.router.url)}}\n        ))\n        .positiveBtn('Login', () => this.router.navigate(['/login'],\n          {queryParams: {url: decodeURI(this.router.url)}}\n        ))\n        .show();\n    } else if (error instanceof AuthenticationError) {\n      new DialogBuilder(this.dialog)\n        .title('Forbidden')\n        .message('You cant rent this car from this account')\n        .positiveBtn('Ok')\n        .show();\n    } else if (error instanceof BadRequestError) {\n      new DialogBuilder(this.dialog)\n        .title('Bad request')\n        .message('Wrong params')\n        .positiveBtn('Ok')\n        .show();\n    } else if (error instanceof ConflictError) {\n      new DialogBuilder(this.dialog)\n        .title('Conflict')\n        .message('This car is already booked for this period')\n        .positiveBtn('Ok')\n        .show();\n    } else {\n      new DialogBuilder(this.dialog)\n        .title('Something goes wrong')\n        .positiveBtn('Try again', () => this.reserveCar(person))\n        .negativeBtn('Close')\n        .show();\n    }\n  }\n}\n\nexport class ReserveDialogBuilder {\n\n  private readonly params: MatDialogConfig<ReserveData>;\n\n  constructor(private dialog: MatDialog) {\n    this.params = new MatDialogConfig<ReserveData>();\n    this.params.data = {\n      car: null,\n      dateStart: null,\n      dateEnd: null\n    };\n  }\n\n  public car(car: Car): ReserveDialogBuilder {\n    this.params.data.car = car;\n    return this;\n  }\n\n  public dateStart(dateStart: Date): ReserveDialogBuilder {\n    this.params.data.dateStart = dateStart;\n    return this;\n  }\n\n  public dateEnd(dateEnd: Date): ReserveDialogBuilder {\n    this.params.data.dateEnd = dateEnd;\n    return this;\n  }\n\n  public show(): MatDialogRef<ReserveModalComponent> {\n    const dialogRef = this.dialog.open(ReserveModalComponent, this.params);\n    return dialogRef;\n  }\n}\n","<div class=\"reserve-dialog-container\">\n  <div class=\"title-container\">\n    <h1 class=\"title\">Order {{car.make}} {{car.model}} {{car.year}}</h1>\n    <h2 class=\"subtitle\">From {{dateStart | date:'dd/MM/yyyy'}}\n      to {{dateEnd | date:'dd/MM/yyyy'}}</h2>\n    <h2 class=\"subtitle\">Price: {{getPrice() | number: '1.0-1'}}$</h2>\n  </div>\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n  <div [ngClass]=\"{'loading': loading}\">\n    <form (submit)=\"reserveCar(reserveForm.value)\" [formGroup]=\"reserveForm\">\n      <div class=\"input-container\">\n        <label #firstNameLabel class=\"input-label\" for=\"firstName\">First name <span class=\"required-marker\">*</span></label>\n        <input [carInput]=\"firstNameLabel\" autocomplete=\"name\" formControlName=\"firstName\" id=\"firstName\"\n               type=\"text\">\n        <div *ngIf=\"isControlInvalid('firstName')\" class=\"error\">\n          First name is required\n        </div>\n      </div>\n      <div class=\"input-container\">\n        <label #secondNameLabel class=\"input-label\" for=\"secondName\">Second name <span class=\"required-marker\">*</span></label>\n        <input [carInput]=\"secondNameLabel\" autocomplete=\"family-name\" formControlName=\"lastName\"\n               id=\"secondName\"\n               type=\"text\">\n        <div *ngIf=\"isControlInvalid('lastName')\" class=\"error\">\n          Second name is required\n        </div>\n      </div>\n      <div class=\"input-container\">\n        <label #emailLabel class=\"input-label\" for=\"email\">Email <span class=\"required-marker\">*</span></label>\n        <input [carInput]=\"emailLabel\" autocomplete=\"email\" formControlName=\"email\" id=\"email\" type=\"email\">\n        <div *ngIf=\"isControlInvalid('email')\" class=\"error\">\n          <div *ngIf=\"getErrors('emil')?.required\">\n            Email is required\n          </div>\n          <div *ngIf=\"getErrors('emil')?.email\">\n            Its not look like email\n          </div>\n        </div>\n      </div>\n      <div class=\"input-container\">\n        <label #phoneLabel class=\"input-label\" for=\"phone\">Phone <span class=\"required-marker\">*</span></label>\n        <input [carInput]=\"phoneLabel\" autocomplete=\"phone\" formControlName=\"phone\" id=\"phone\" type=\"tel\">\n        <div *ngIf=\"isControlInvalid('phone')\" class=\"error\">\n          <div *ngIf=\"getErrors('phone').required\">Phone is required</div>\n          <div *ngIf=\"getErrors('phone').pattern\">Wrong phone format</div>\n        </div>\n      </div>\n      <div class=\"buttons-container\">\n        <button matDialogClose type=\"button\">Close</button>\n        <button [disabled]=\"reserveForm.invalid\" type=\"submit\">Reserve</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login/login.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RegistrationComponent} from './registration/registration.component';\nimport {CarCardComponent} from './car-card/car-card.component';\nimport {CarDetailsComponent} from './car-details/car-details.component';\nimport {LoginRegistrationModalComponent} from './login-registration-modal/login-registration-modal.component';\nimport {ReserveModalComponent} from './reserve-modal/reserve-modal.component';\nimport {CarPriceLabelComponent} from './car-price-label/car-price-label.component';\nimport {CarInputDirective} from './car-input.directive';\nimport {DialogComponent} from './dialog/dialog.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {ImageSliderComponent} from './image-slider/image-slider.component';\n\n@NgModule({\n  declarations: [LoginComponent, RegistrationComponent, CarCardComponent, CarDetailsComponent,\n    LoginRegistrationModalComponent, ReserveModalComponent, CarPriceLabelComponent, CarInputDirective, DialogComponent,\n    ImageSliderComponent],\n  exports: [\n    LoginComponent,\n    RegistrationComponent,\n    CarCardComponent,\n    CarDetailsComponent,\n    LoginRegistrationModalComponent,\n    ReserveModalComponent,\n    CarPriceLabelComponent,\n    CarInputDirective,\n    ImageSliderComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatProgressBarModule\n  ]\n})\nexport class ServiceModule {\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StaticLocationService {\r\n\r\n  // Hardcoded cities data - Israeli cities\r\n  private cities = [\r\n    { name: 'Rehovot', short_name: 'Rehovot' },\r\n    { name: 'Tel Aviv', short_name: 'TLV' },\r\n    { name: 'Jerusalem', short_name: 'JRS' },\r\n    { name: 'Haifa', short_name: 'Haifa' },\r\n    { name: 'Beer Sheva', short_name: 'BeerSheva' },\r\n    { name: 'Netanya', short_name: 'Netanya' },\r\n    { name: 'Ashdod', short_name: 'Ashdod' },\r\n    { name: 'Petah Tikva', short_name: 'PetahTikva' },\r\n    { name: 'Rishon LeZion', short_name: 'RishonLeZion' },\r\n    { name: 'Holon', short_name: 'Holon' }\r\n  ];\r\n\r\n  // Hardcoded places data\r\n  private places = [\r\n    {\r\n      place_id: 'static_place_1',\r\n      formatted_address: '123 Main St, New York, NY 10001, USA',\r\n      latitude: 40.7128,\r\n      longitude: -74.0060\r\n    }\r\n  ];\r\n\r\n  getCities() {\r\n    return this.cities;\r\n  }\r\n\r\n  getPlaces() {\r\n    return this.places;\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {SharedHttpService} from '../shared-http.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Title} from '@angular/platform-browser';\nimport {LocalStoreService} from '../../local-store.service';\nimport {DialogBuilder} from '../../service/dialog/dialog-builder';\nimport {MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-login-registration',\n  templateUrl: './login-registration.component.html',\n  styleUrls: ['./login-registration.component.scss']\n})\nexport class LoginRegistrationComponent implements OnInit {\n\n  private urlNavigate: string;\n  _loginFlag = true;\n  loading = false;\n\n  constructor(private sharedService: SharedHttpService, private localStore: LocalStoreService, private router: Router,\n              private route: ActivatedRoute, private title: Title, private dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    /**\n     * Get url params that contains url before login\n     */\n    this.loginFlag = this.router.url.split('?')[0] === '/login';\n    this.title.setTitle(this.loginFlag ? 'Login' : 'Registration');\n    this.route.queryParams.subscribe(params => this.urlNavigate = params.url || '');\n    if (this.localStore.getToken()) {\n      new DialogBuilder(this.dialog)\n        .title('Logged in')\n        .message('You are already logged in')\n        .positiveBtn('Ok', this.back.bind(this))\n        .show();\n    }\n  }\n\n  loggedIn() {\n    new DialogBuilder(this.dialog)\n      .title('Logged in')\n      .message('Logged in success')\n      .positiveBtn('Ok', this.back.bind(this))\n      .show();\n  }\n\n  registered() {\n    new DialogBuilder(this.dialog)\n      .title('Registered')\n      .message('You are logged in success')\n      .positiveBtn('Ok', this.back.bind(this))\n      .show();\n  }\n\n  /**\n   * Parse params from string to array of pairs key: value\n   * @param url url with params\n   */\n  private parseParams(url: string) {\n    url = url.split('?')[1];\n    if (!url) {\n      return;\n    }\n    const pairs = url.split('&');\n    const data = {};\n    for (const pair of pairs) {\n      const param = pair.split('=');\n      data[param[0]] = param[1];\n    }\n    return data;\n  }\n\n  get loginFlag() {\n    return this._loginFlag;\n  }\n\n  set loginFlag(loginFlag: boolean) {\n    this.title.setTitle(loginFlag ? 'Login' : 'Registration');\n    this._loginFlag = loginFlag;\n  }\n\n  private back() {\n    this.router.navigate(\n      [this.urlNavigate.split('?')[0]], {queryParams: this.parseParams(this.urlNavigate)}\n    ).then();\n  }\n}\n","<div class=\"login-registration-card\">\n  <div class=\"login-registration-progress-container\">\n    <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n    <div [ngClass]=\"{'loading': loading}\" class=\"login-registration-container\">\n      <ng-container *ngIf=\"loginFlag; else registration\">\n        <h1 class=\"title\">Log in</h1>\n        <h2 class=\"subtitle\">Type your data and hit Yalla!</h2>\n        <app-login (loading)=\"loading=$event\" (logged-in)=\"loggedIn()\" (registration)=\"loginFlag=false\"></app-login>\n      </ng-container>\n      <ng-template #registration>\n        <h1 class=\"title\">Registration</h1>\n        <h2 class=\"subtitle\">Type your data and hit Yalla!</h2>\n        <app-registration (loading)=\"loading=$event\" (login)=\"loginFlag=true\"\n                          (registered)=\"registered()\"></app-registration>\n      </ng-template>\n    </div>\n  </div>\n</div>\n<app-special-offers></app-special-offers>\n<app-footer></app-footer>\n","import {Component, OnInit} from '@angular/core';\nimport {SharedHttpService} from '../shared-http.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {LocalStoreService} from '../../local-store.service';\nimport {parseParams} from '../../tools';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  private urlNavigate: string;\n\n  constructor(private sharedService: SharedHttpService, private localStore: LocalStoreService, private router: Router, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    /**\n     * Get url params that contains url before logout\n     */\n    this.route.queryParams.subscribe(params => this.urlNavigate = params.url || '');\n    this.localStore.deleteToken();\n    this.localStore.deleteEmail();\n    this.localStore.deletePhoneNumber();\n    this.localStore.deleteLastName();\n    this.localStore.deleteName();\n    /**\n     * Navigate to previous page\n     */\n    this.router.navigate([this.urlNavigate.split('?')[0]],\n      {queryParams: parseParams(this.urlNavigate)}).then();\n  }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {SharedHttpService} from '../shared-http.service';\nimport {Router} from '@angular/router';\nimport {LocalStoreService} from '../../local-store.service';\nimport {DialogBuilder} from \"../../service/dialog/dialog-builder\";\nimport {AuthorizationError, ConnectionError} from \"../../errors\";\nimport {MatDialog} from \"@angular/material/dialog\";\n\ninterface NavLinks {\n  path: string;\n  label: string;\n}\n\n@Component({\n  selector: 'app-navigator',\n  templateUrl: './navigator.component.html',\n  styleUrls: ['./navigator.component.scss']\n})\nexport class NavigatorComponent implements OnInit {\n  @ViewChild('mobileHeader') mobileHeader: ElementRef;\n\n  navLinks: NavLinks[] = [\n    {path: 'search', label: 'Search'},\n    {path: 'let-car-work', label: 'Let the car work'},\n    {path: 'terms-of-use', label: 'Terms of use'}\n  ];\n  loginLinks: NavLinks[] = [\n    {path: 'registration', label: 'Sign up'},\n    {path: 'login', label: 'Log in'}\n  ];\n  logoutLinks: NavLinks[] = [\n    {path: 'logout', label: 'Logout'}\n  ];\n  opened = false;\n\n\n  constructor(public router: Router, private localStore: LocalStoreService, private dialog: MatDialog,\n              private httpService: SharedHttpService) {\n  }\n\n  ngOnInit() {\n  }\n\n  get loggedIn(): boolean {\n    return !!this.localStore.getToken();\n  }\n\n  getUrlParams() {\n    if (this.router.url.split('?')[0] === '/login' || this.router.url.split('?')[0] === '/registration') {\n      return {url: decodeURIComponent(this.router.url.split('?')[1]?.split('url=')[1])};\n    }\n    return {url: decodeURI(this.router.url)};\n  }\n\n  setOpened() {\n    this.opened = true;\n  }\n\n  setClosed() {\n    this.opened = false;\n  }\n\n  showDeleteAccountDialog() {\n    this.setClosed();\n    new DialogBuilder(this.dialog)\n      .title('Delete account?')\n      .message('Are you sure that you want delete account? You cant undo this action.')\n      .negativeBtn('Close')\n      .positiveBtn('Delete', () => this.deleteAccount())\n      .show();\n  }\n\n  private deleteAccount() {\n    this.httpService.deleteAccount()\n      .subscribe(() => this.accountDeleted(),\n        error => this.deleteError(error));\n  }\n\n  private accountDeleted() {\n    this.localStore.deleteToken();\n    this.localStore.deleteEmail();\n    this.localStore.deletePhoneNumber();\n    this.localStore.deleteLastName();\n    this.localStore.deleteName();\n  }\n\n  private deleteError(error: any) {\n    if (error instanceof ConnectionError) {\n      new DialogBuilder(this.dialog)\n        .title('Connection error')\n        .message('Check your connection and try again')\n        .negativeBtn('Close')\n        .positiveBtn('Try again', () => this.deleteAccount())\n        .show();\n    } else if (error instanceof AuthorizationError) {\n      new DialogBuilder(this.dialog)\n        .title('Authorization error')\n        .message('You are not authorized')\n        .positiveBtn('Ok')\n        .show();\n    } else {\n      new DialogBuilder(this.dialog)\n        .title('Something goes wrong')\n        .positiveBtn('Try again', () => this.deleteAccount())\n        .negativeBtn('Close')\n        .show();\n    }\n  }\n}\n","<div (swipeleft)=\"setClosed()\" [ngClass]=\"{'opened': opened}\" class=\"header\">\n  <a (click)=\"setClosed()\" class=\"logo\" href=\"/\">\n    <img alt=\"logo\" src=\"../../../assets/images/navigator/logo.svg\">\n  </a>\n  <a (click)=\"setClosed()\" *ngFor=\"let link of navLinks; let index = index\"\n     [id]=\"index\"\n     [routerLink]=\"link.path\"\n     class=\"navigation-link\">\n    {{link.label}}\n  </a>\n  <ng-container *ngIf=\"!loggedIn\">\n    <a (click)=\"setClosed()\" *ngFor=\"let link of loginLinks\"\n       [queryParams]=\"getUrlParams()\"\n       [routerLink]=\"link.path\"\n       class=\"navigation-link\">\n      {{link.label}}\n    </a>\n  </ng-container>\n  <ng-container *ngIf=\"loggedIn\">\n    <a *ngFor=\"let logoutLink of logoutLinks \" (click)=\"setClosed()\"\n       [queryParams]=\"getUrlParams()\"\n       [routerLink]=\"logoutLink.path\"\n       class=\"navigation-link\">\n      {{logoutLink.label}}\n    </a>\n    <a (click)=\"showDeleteAccountDialog()\" class=\"navigation-link\">Delete account</a>\n  </ng-container>\n\n</div>\n\n<div #mobileHeader class=\"mobile-header\">\n  <button (click)=\"setOpened()\"><i class=\"fas fa-bars\"></i></button>\n  <a class=\"logo\" href=\"/\">\n    <img alt=\"logo\" src=\"../../../assets/images/navigator/logo.svg\">\n  </a>\n</div>\n\n<div (click)=\"setClosed()\" [ngClass]=\"{'hidden': opened}\" class=\"hide-div\">\n</div>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-police',\n  templateUrl: './privacy-police.component.html',\n  styleUrls: ['./privacy-police.component.scss']\n})\nexport class PrivacyPoliceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"privacy-police\">\n  <h1 class=\"title\">Privacy Policy for ilCarro</h1>\n\n  <p>At ilCarro, accessible from ilCarro.xyz, one of our main priorities is the privacy of our visitors. This Privacy\n    Policy document contains types of information that is collected and recorded by ilCarro and how we use it.</p>\n\n  <p>If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact\n    us.</p>\n\n  <p>This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to\n    the information that they shared and/or collect in ilCarro. This policy is not applicable to any information\n    collected offline or via channels other than this website.</p>\n\n  <h2 class=\"subtitle\">Consent</h2>\n\n  <p>By using our website, you hereby consent to our Privacy Policy and agree to its terms.</p>\n\n  <h2 class=\"subtitle\">Information we collect</h2>\n\n  <p>The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be\n    made clear to you at the point we ask you to provide your personal information.</p>\n  <p>If you contact us directly, we may receive additional information about you such as your name, email address, phone\n    number, the contents of the message and/or attachments you may send us, and any other information you may choose to\n    provide.</p>\n  <p>When you register for an Account, we may ask for your contact information, including items such as name, company\n    name, address, email address, and telephone number.</p>\n\n  <h2 class=\"subtitle\">How we use your information</h2>\n\n  <p>We use the information we collect in various ways, including to:</p>\n\n  <ul>\n    <li>Provide, operate, and maintain our webste</li>\n    <li>Improve, personalize, and expand our webste</li>\n    <li>Understand and analyze how you use our webste</li>\n    <li>Develop new products, services, features, and functionality</li>\n    <li>Communicate with you, either directly or through one of our partners, including for customer service, to provide\n      you with updates and other information relating to the webste, and for marketing and promotional purposes\n    </li>\n    <li>Send you emails</li>\n    <li>Find and prevent fraud</li>\n  </ul>\n\n  <h2 class=\"subtitle\">Log Files</h2>\n\n  <p>ilCarro follows a standard procedure of using log files. These files log visitors when they visit websites. All\n    hosting companies do this and a part of hosting services' analytics. The information collected by log files include\n    internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit\n    pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable.\n    The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the\n    website, and gathering demographic information. Our Privacy Policy was created with the help of the <a\n      href=\"https://www.privacypolicygenerator.info\">Privacy Policy Generator</a> and the <a\n      href=\"https://www.disclaimergenerator.org/\">Disclaimer Generator</a>.</p>\n\n  <h2 class=\"subtitle\">Cookies and Web Beacons</h2>\n\n  <p>Like any other website, ilCarro uses 'cookies'. These cookies are used to store information including visitors'\n    preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize\n    the users' experience by customizing our web page content based on visitors' browser type and/or other\n    information.</p>\n\n  <p>For more general information on cookies, please read <a href=\"https://www.cookieconsent.com/what-are-cookies/\">\"What\n    Are Cookies\"</a>.</p>\n\n\n  <h2 class=\"subtitle\">Advertising Partners Privacy Policies</h2>\n\n  <p>You may consult this list to find the Privacy Policy for each of the advertising partners of ilCarro.</p>\n\n  <p>Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in\n    their respective advertisements and links that appear on ilCarro, which are sent directly to users' browser. They\n    automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of\n    their advertising campaigns and/or to personalize the advertising content that you see on websites that you\n    visit.</p>\n\n  <p>Note that ilCarro has no access to or control over these cookies that are used by third-party advertisers.</p>\n\n  <h2 class=\"subtitle\">Third Party Privacy Policies</h2>\n\n  <p>ilCarro's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the\n    respective Privacy Policies of these third-party ad servers for more detailed information. It may include their\n    practices and instructions about how to opt-out of certain options. </p>\n\n  <p>You can choose to disable cookies through your individual browser options. To know more detailed information about\n    cookie management with specific web browsers, it can be found at the browsers' respective websites.</p>\n\n  <h2 class=\"subtitle\">CCPA Privacy Rights (Do Not Sell My Personal Information)</h2>\n\n  <p>Under the CCPA, among other rights, California consumers have the right to:</p>\n  <p>Request that a business that collects a consumer's personal data disclose the categories and specific pieces of\n    personal data that a business has collected about consumers.</p>\n  <p>Request that a business delete any personal data about the consumer that a business has collected.</p>\n  <p>Request that a business that sells a consumer's personal data, not sell the consumer's personal data.</p>\n  <p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights,\n    please contact us.</p>\n  <p>privacy-police works!</p>\n\n\n  <h2 class=\"subtitle\">GDPR Data Protection Rights</h2>\n\n  <p>We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the\n    following:</p>\n  <p>The right to access – You have the right to request copies of your personal data. We may charge you a small fee for\n    this service.</p>\n  <p>The right to rectification – You have the right to request that we correct any information you believe is\n    inaccurate. You also have the right to request that we complete the information you believe is incomplete.</p>\n  <p>The right to erasure – You have the right to request that we erase your personal data, under certain\n    conditions.</p>\n  <p>The right to restrict processing – You have the right to request that we restrict the processing of your personal\n    data, under certain conditions.</p>\n  <p>The right to object to processing – You have the right to object to our processing of your personal data, under\n    certain conditions.</p>\n  <p>The right to data portability – You have the right to request that we transfer the data that we have collected to\n    another organization, or directly to you, under certain conditions.</p>\n  <p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights,\n    please contact us.</p>\n\n  <h2 class=\"subtitle\">Children's Information</h2>\n\n  <p>Another part of our priority is adding protection for children while using the internet. We encourage parents and\n    guardians to observe, participate in, and/or monitor and guide their online activity.</p>\n\n  <p>ilCarro does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you\n    think that your child provided this kind of information on our website, we strongly encourage you to contact us\n    immediately and we will do our best efforts to promptly remove such information from our records.</p>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, tap} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {LocalStoreService} from '../local-store.service';\nimport {handleErrors} from '../errors';\n\nexport interface User {\n  first_name: string;\n  second_name: string;\n  registration_date?: string;\n  comments?: string[];\n  own_cars?: string[];\n  booked_cars?: string[];\n  history?: string[];\n}\n\nconst URL = 'https://ilcarro-backend.herokuapp.com/v1';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedHttpService {\n\n  constructor(private http: HttpClient, private localStore: LocalStoreService) {\n  }\n\n  registration(user: User, email: string, password: string): Observable<User> {\n    const token = `Basic ${btoa(email + ':' + password)}`;\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    return this.http.post<User>(URL + '/registration', user, auth)\n      .pipe(catchError(handleErrors),\n        tap(\n          value => {\n            this.localStore.saveEmail(email);\n            this.localStore.saveToken(token);\n            this.localStore.saveName(value.first_name);\n            this.localStore.saveLastName(value.second_name);\n          }));\n  }\n\n  login(email: string, password: string): Observable<User> {\n    const token = `Basic ${btoa(email + ':' + password)}`;\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    return this.http.get<User>(URL + '/user/login', auth)\n      .pipe(catchError(handleErrors),\n        tap(value => {\n          this.localStore.saveEmail(email);\n          this.localStore.saveToken(token);\n          this.localStore.saveName(value.first_name);\n          this.localStore.saveLastName(value.second_name);\n        }));\n  }\n\n  deleteAccount() {\n    const token = this.localStore.getToken();\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    return this.http.delete(`${URL}/user`, auth)\n      .pipe(catchError(handleErrors));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LogoutComponent} from './logout/logout.component';\nimport {NavigatorComponent} from './navigator/navigator.component';\nimport {TermsOfUseComponent} from './terms-of-use/terms-of-use.component';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {SearchComponent} from '../cars/search/search.component';\nimport {LetCarWorkComponent} from '../cars/let-car-work/let-car-work.component';\nimport {CarsModule} from '../cars/cars.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {SearchResultsComponent} from '../cars/search-results/search-results.component';\nimport {CarDetailsComponent} from '../cars/car-details/car-details.component';\nimport {ServiceModule} from '../service/service.module';\nimport {LoginRegistrationComponent} from './login-registration/login-registration.component';\nimport {PrivacyPoliceComponent} from './privacy-police/privacy-police.component';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nconst routes: Routes = [\n  {path: 'registration', component: LoginRegistrationComponent},\n  {path: 'login', component: LoginRegistrationComponent},\n  {path: 'search', component: SearchComponent},\n  {path: 'let-car-work', component: LetCarWorkComponent},\n  {path: 'terms-of-use', component: TermsOfUseComponent},\n  {path: 'privacy-police', component: PrivacyPoliceComponent},\n  {path: 'logout', component: LogoutComponent},\n  {path: 'search/:city/:startDate/:endDate', component: SearchResultsComponent},\n  {\n    path: 'search/:city/:startDate/:endDate/:minPrice/:maxPrice/:sortByPriceFromLowToHigh',\n    component: SearchResultsComponent\n  },\n  {path: 'search/results', component: SearchResultsComponent},\n  {path: 'car/:id', component: CarDetailsComponent},\n  {path: '', redirectTo: 'search', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [LogoutComponent, NavigatorComponent, TermsOfUseComponent, LoginRegistrationComponent, PrivacyPoliceComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes, {\n      onSameUrlNavigation: 'reload',\n      preloadingStrategy: PreloadAllModules\n    }),\n    CarsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ServiceModule,\n    MatProgressBarModule\n  ],\n  exports: [\n    NavigatorComponent\n  ]\n})\nexport class SharedModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Title} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-terms-of-use',\n  templateUrl: './terms-of-use.component.html',\n  styleUrls: ['./terms-of-use.component.scss']\n})\nexport class TermsOfUseComponent implements OnInit {\n\n  constructor(private title: Title) { }\n\n  ngOnInit() {\n    this.title.setTitle('Terms of use')\n  }\n\n}\n","<div class=\"terms-container\">\n  <h1 class=\"title\">Terms and Conditions</h1>\n\n  <p>Welcome to Il Carro!</p>\n\n  <p>These terms and conditions outline the rules and regulations for the use of Il Carro's Website, located at <a\n    href=\"https://ilcarro.xyz/\">ilCarro.xyz</a></p>\n\n  <p>By accessing this website we assume you accept these terms and conditions. Do not continue to use Il Carro if you\n    do not agree to take all of the terms and conditions stated on this page.</p>\n\n  <p>The following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer Notice and all\n    Agreements: \"Client\", \"You\" and \"Your\" refers to you, the person log on this website and compliant to the Company’s\n    terms and conditions. \"The Company\", \"Ourselves\", \"We\", \"Our\" and \"Us\", refers to our Company. \"Party\", \"Parties\",\n    or \"Us\", refers to both the Client and ourselves. All terms refer to the offer, acceptance and consideration of\n    payment necessary to undertake the process of our assistance to the Client in the most appropriate manner for the\n    express purpose of meeting the Client’s needs in respect of provision of the Company’s stated services, in\n    accordance with and subject to, prevailing law of Netherlands. Any use of the above terminology or other words in\n    the singular, plural, capitalization and/or he/she or they, are taken as interchangeable and therefore as referring\n    to same.</p>\n\n  <h2 class=\"subtitle\">Cookies</h2>\n\n  <p>We employ the use of cookies. By accessing Il Carro, you agreed to use cookies in agreement with the Il Carro's\n    <a href=\"/privacy-police\">Privacy Policy</a>.</p>\n\n  <p>Most interactive websites use cookies to let us retrieve the user’s details for each visit. Cookies are used by our\n    website to enable the functionality of certain areas to make it easier for people visiting our website. Some of our\n    affiliate/advertising partners may also use cookies.</p>\n\n  <h2 class=\"subtitle\">License</h2>\n\n  <p>Unless otherwise stated, Il Carro and/or its licensors own the intellectual property rights for all material on Il\n    Carro. All intellectual property rights are reserved. You may access this from Il Carro for your own personal use\n    subjected to restrictions set in these terms and conditions.</p>\n\n  <p>You must not:</p>\n  <ul>\n    <li>Republish material from Il Carro</li>\n    <li>Sell, rent or sub-license material from Il Carro</li>\n    <li>Reproduce, duplicate or copy material from Il Carro</li>\n    <li>Redistribute content from Il Carro</li>\n  </ul>\n\n  <p>This Agreement shall begin on the date hereof.</p>\n\n  <p>Parts of this website offer an opportunity for users to post and exchange opinions and information in certain areas\n    of the website. Il Carro does not filter, edit, publish or review Comments prior to their presence on the website.\n    Comments do not reflect the views and opinions of Il Carro,its agents and/or affiliates. Comments reflect the views\n    and opinions of the person who post their views and opinions. To the extent permitted by applicable laws, Il Carro\n    shall not be liable for the Comments or for any liability, damages or expenses caused and/or suffered as a result of\n    any use of and/or posting of and/or appearance of the Comments on this website.</p>\n\n  <p>Il Carro reserves the right to monitor all Comments and to remove any Comments which can be considered\n    inappropriate, offensive or causes breach of these Terms and Conditions.</p>\n\n  <p>You warrant and represent that:</p>\n\n  <ul>\n    <li>You are entitled to post the Comments on our website and have all necessary licenses and consents to do so;</li>\n    <li>The Comments do not invade any intellectual property right, including without limitation copyright, patent or\n      trademark of any third party;\n    </li>\n    <li>The Comments do not contain any defamatory, libelous, offensive, indecent or otherwise unlawful material which\n      is an invasion of privacy\n    </li>\n    <li>The Comments will not be used to solicit or promote business or custom or present commercial activities or\n      unlawful activity.\n    </li>\n  </ul>\n\n  <p>You hereby grant Il Carro a non-exclusive license to use, reproduce, edit and authorize others to use, reproduce\n    and edit any of your Comments in any and all forms, formats or media.</p>\n\n  <h2 class=\"subtitle\">Hyperlinking to our Content</h2>\n\n  <p>The following organizations may link to our Website without prior written approval:</p>\n\n  <ul>\n    <li>Government agencies;</li>\n    <li>Search engines;</li>\n    <li>News organizations;</li>\n    <li>Online directory distributors may link to our Website in the same manner as they hyperlink to the Websites of\n      other listed businesses; and\n    </li>\n    <li>System wide Accredited Businesses except soliciting non-profit organizations, charity shopping malls, and\n      charity fundraising groups which may not hyperlink to our Web site.\n    </li>\n  </ul>\n\n  <p>These organizations may link to our home page, to publications or to other Website information so long as the link:\n    (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of the linking\n    party and its products and/or services; and (c) fits within the context of the linking party’s site.</p>\n\n  <p>We may consider and approve other link requests from the following types of organizations:</p>\n\n  <ul>\n    <li>commonly-known consumer and/or business information sources;</li>\n    <li>dot.com community sites;</li>\n    <li>associations or other groups representing charities;</li>\n    <li>online directory distributors;</li>\n    <li>internet portals;</li>\n    <li>accounting, law and consulting firms; and</li>\n    <li>educational institutions and trade associations.</li>\n  </ul>\n\n  <p>We will approve link requests from these organizations if we decide that: (a) the link would not make us look\n    unfavorably to ourselves or to our accredited businesses; (b) the organization does not have any negative records\n    with us; (c) the benefit to us from the visibility of the hyperlink compensates the absence of Il Carro; and (d) the\n    link is in the context of general resource information.</p>\n\n  <p>These organizations may link to our home page so long as the link: (a) is not in any way deceptive; (b) does not\n    falsely imply sponsorship, endorsement or approval of the linking party and its products or services; and (c) fits\n    within the context of the linking party’s site.</p>\n\n  <p>If you are one of the organizations listed in paragraph 2 above and are interested in linking to our website, you\n    must inform us by sending an e-mail to Il Carro. Please include your name, your organization name, contact\n    information as well as the URL of your site, a list of any URLs from which you intend to link to our Website, and a\n    list of the URLs on our site to which you would like to link. Wait 2-3 weeks for a response.</p>\n\n  <p>Approved organizations may hyperlink to our Website as follows:</p>\n\n  <ul>\n    <li>By use of our corporate name; or</li>\n    <li>By use of the uniform resource locator being linked to; or</li>\n    <li>By use of any other description of our Website being linked to that makes sense within the context and format of\n      content on the linking party’s site.\n    </li>\n  </ul>\n\n  <p>No use of Il Carro's logo or other artwork will be allowed for linking absent a trademark license agreement.</p>\n\n  <h2 class=\"subtitle\">iFrames</h2>\n\n  <p>Without prior approval and written permission, you may not create frames around our Webpages that alter in any way\n    the visual presentation or appearance of our Website.</p>\n\n  <h2 class=\"subtitle\">Content Liability</h2>\n\n  <p>We shall not be hold responsible for any content that appears on your Website. You agree to protect and defend us\n    against all claims that is rising on your Website. No link(s) should appear on any Website that may be interpreted\n    as libelous, obscene or criminal, or which infringes, otherwise violates, or advocates the infringement or other\n    violation of, any third party rights.</p>\n\n  <h2 class=\"subtitle\">Your Privacy</h2>\n\n  <p>Please read <a href=\"/privacy-police\">Privacy Policy</a></p>\n\n  <h2 class=\"subtitle\">Reservation of Rights</h2>\n\n  <p>We reserve the right to request that you remove all links or any particular link to our Website. You approve to\n    immediately remove all links to our Website upon request. We also reserve the right to amen these terms and\n    conditions and it’s linking policy at any time. By continuously linking to our Website, you agree to be bound to and\n    follow these linking terms and conditions.</p>\n\n  <h2 class=\"subtitle\">Removal of links from our website</h2>\n\n  <p>If you find any link on our Website that is offensive for any reason, you are free to contact and inform us any\n    moment. We will consider requests to remove links but we are not obligated to or so or to respond to you\n    directly.</p>\n\n  <p>We do not ensure that the information on this website is correct, we do not warrant its completeness or accuracy;\n    nor do we promise to ensure that the website remains available or that the material on the website is kept up to\n    date.</p>\n\n  <h2 class=\"subtitle\">Disclaimer</h2>\n\n  <p>To the maximum extent permitted by applicable law, we exclude all representations, warranties and conditions\n    relating to our website and the use of this website. Nothing in this disclaimer will:</p>\n\n  <ul>\n    <li>limit or exclude our or your liability for death or personal injury;</li>\n    <li>limit or exclude our or your liability for fraud or fraudulent misrepresentation;</li>\n    <li>limit any of our or your liabilities in any way that is not permitted under applicable law; or</li>\n    <li>exclude any of our or your liabilities that may not be excluded under applicable law.</li>\n  </ul>\n\n  <p>The limitations and prohibitions of liability set in this Section and elsewhere in this disclaimer: (a) are subject\n    to the preceding paragraph; and (b) govern all liabilities arising under the disclaimer, including liabilities\n    arising in contract, in tort and for breach of statutory duty.</p>\n\n  <p>As long as the website and the information and services on the website are provided free of charge, we will not be\n    liable for any loss or damage of any nature.</p>\n</div>\n<app-footer></app-footer>\n","import {Car, Place} from './cars/cars-http.service';\nimport {DatePipe} from '@angular/common';\nimport {FormGroup} from '@angular/forms';\n\nexport function mapDate(date: Date): string {\n  const datePipe = new DatePipe('en');\n  return datePipe.transform(date, 'yyyy-MM-dd HH:mm');\n}\n\nexport function compareCars(car1: Car, car2: Car, lowToHigh: boolean): number {\n  let res = car1.price_per_day - car2.price_per_day;\n  if (res !== 0) {\n    return lowToHigh ? res : res * -1;\n  }\n  res = car1.make.localeCompare(car2.make);\n  if (res !== 0) {\n    return res;\n  }\n  res = car1.model.localeCompare(car2.model);\n  if (res !== 0) {\n    return res;\n  }\n  res = car1.year.localeCompare(car2.year);\n  return res;\n}\n\nexport function compareDates(date1: Date, date2: Date): boolean {\n  return date1?.getTime() >= date2?.getTime();\n}\n\n/**\n * Parse params from string to array of pairs key: value\n * @param url url with params\n */\nexport function parseParams(url: string) {\n  url = url.split('?')[1];\n  if (!url) {\n    return;\n  }\n  const pairs = url.split('&');\n  const data = {};\n  for (const pair of pairs) {\n    const param = pair.split('=');\n    data[param[0]] = param[1];\n  }\n  return data;\n}\n\nfunction saveTimestamp(saveName: string) {\n  localStorage.setItem(`${saveName}-timestamp`, `${new Date().getTime()}`);\n}\n\nfunction checkTimestamp(savedName: string): boolean {\n  const currentTime = new Date().getTime();\n  const saveTime = parseInt(localStorage.getItem(`${savedName}-timestamp`), 10);\n  return currentTime - saveTime > 3600 * 1000;\n}\n\nexport function saveFormData(formGroup: FormGroup, url: string) {\n  const data = formGroup.getRawValue();\n  const jsonData = JSON.stringify(data);\n  localStorage.setItem(url, jsonData);\n  saveTimestamp(url);\n}\n\nexport function restoreFormData(formGroup: FormGroup, url: string) {\n  if (checkTimestamp(url))\n    clearFromData(url);\n  const jsonData = localStorage.getItem(url);\n  const data = JSON.parse(jsonData);\n  if (data)\n    formGroup.setValue(data);\n}\n\nexport function clearFromData(url: string) {\n  localStorage.removeItem(url);\n}\n\nexport function saveAutocomplete(place: Place) {\n  const jsonData = JSON.stringify(place)\n  localStorage.setItem('autocomplete', jsonData);\n  saveTimestamp('autocomplete');\n}\n\nexport function restoreAutocomplete(): Place {\n  if (checkTimestamp('autocomplete'))\n    clearSavedAutocomplete();\n  const jsonData = localStorage.getItem('autocomplete');\n  return JSON.parse(jsonData);\n}\n\nexport function clearSavedAutocomplete() {\n  localStorage.removeItem('autocomplete');\n}\n\nexport function saveFiles(files: FilesForSave) {\n  const forSave = {\n    photoNamesMap: [],\n    photosUrlsMap: [],\n    photosProgressMap: []\n  };\n  files.photoNamesMap.forEach((value, key) => forSave.photoNamesMap.push({key, value}));\n  files.photosProgressMap.forEach((value, key) => forSave.photosProgressMap.push({key, value}));\n  files.photosUrlsMap.forEach((value, key) => forSave.photosUrlsMap.push({key, value}));\n  const jsonData = JSON.stringify(forSave);\n  localStorage.setItem('files', jsonData);\n  saveTimestamp('files');\n}\n\nexport function restoreFiles(): FilesForSave {\n  if (checkTimestamp('files'))\n    clearFilesForSave();\n  const jsonData = localStorage.getItem('files');\n  const savedData: SaveFilesData = JSON.parse(jsonData);\n  const res: FilesForSave = {\n    photosProgressMap: new Map<File, number>(),\n    photosUrlsMap: new Map<File, string>(),\n    photoNamesMap: new Map<File, string>()\n  };\n  if (savedData) {\n    savedData.photoNamesMap.forEach(value => res.photoNamesMap.set(value.key, value.value));\n    savedData.photosProgressMap.forEach(value => res.photosProgressMap.set(value.key, value.value));\n    savedData.photosUrlsMap.forEach(value => res.photosUrlsMap.set(value.key, value.value));\n  }\n  return res;\n}\n\nexport function clearFilesForSave() {\n  localStorage.removeItem('files');\n}\n\nexport function saveCityValue(data: string) {\n  localStorage.setItem('city-value', data);\n  saveTimestamp('city-value');\n}\n\nexport function restoreCityValue(): string {\n  if (checkTimestamp('city-value'))\n    clearCityValue();\n  return localStorage.getItem('city-value');\n}\n\nexport function clearCityValue() {\n  localStorage.removeItem('city-value');\n}\n\nexport interface FilesForSave {\n  photosUrlsMap: Map<File, string>;\n  photosProgressMap: Map<File, number>;\n  photoNamesMap: Map<File, string>;\n}\n\nexport interface SaveFilesData {\n  photoNamesMap: { key: File, value: string }[];\n  photosUrlsMap: { key: File, value: string }[];\n  photosProgressMap: { key: File, value: number }[];\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related dialog stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an dialog is thrown.\n */\n// import 'zone.js/dist/zone-dialog';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}